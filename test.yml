openapi: 3.0.3
info:
  title: Marketplace Api Documentation
  description: Marketplace Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
  version: '4.318'
servers:
  - url: https://dev.rarible.com
  - url: https://rinkeby.rarible.com
  - url: https://testnet.rarible.com
  - url: https://rarible.com
tags:
  - name: activity-controller
    description: Activity Controller
  - name: auction-controller
    description: Auction Controller
  - name: collection-controller
    description: Collection Controller
  - name: collection-search-controller
    description: Collection Search Controller
  - name: config-controller
    description: Config Controller
  - name: currency-controller
    description: Currency Controller
  - name: following-controller
    description: Following Controller
  - name: item-controller
    description: Item Controller
  - name: item-search-controller
    description: Item Search Controller
  - name: item-like-controller
    description: Item Like Controller
  - name: lock-controller
    description: Lock Controller
  - name: notification-controller
    description: Notification Controller
  - name: ownership-controller
    description: Ownership Controller
  - name: profile-controller
    description: Profile Controller
  - name: report-controller
    description: Report Controller
  - name: sell-order-controller
    description: Sell Order Controller
  - name: short-url-controller
    description: Short Url Controller
  - name: subscribe-controller
    description: Subscribe Controller
  - name: twitter-controller
    description: Twitter Controller
  - name: nft-storage-controller
    description: Nft Storage Controller
  - name: user-controller
    description: User Controller
  - name: wallet-controller
    description: Wallet Controller
  - name: search-controller
    description: Utility endpoints for search indexing
  - name: ranking-controller
    description: Rankings for different entities like collections or users
  - name: statistics-controller
    description: Statistics data
  - name: event-controller
    description: Event Controller
  - name: popular-controller
    description: Popular Controller
  - name: bid-controller
    description: Bid Controller
  - name: collection-watchlist-controller
    description: Collection Watchlist Controller
paths:
  /marketplace/api/v4/fees/order:
    get:
      tags:
        - fee-controller
      summary: get Order Fees
      operationId: getOrderFeesUsingGET
      parameters:
        - name: collection
          in: query
          description: collection id
          required: false
          style: form
          schema:
            type: string
        - name: order
          in: query
          description: Order id
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FeeResponse'
  /marketplace/api/v4/activity:
    post:
      tags:
        - activity-controller
      summary: getActivities
      operationId: getActivitiesUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityPageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
  /marketplace/api/v4/auctions/byIds:
    post:
      tags:
        - auction-controller
      summary: getAuctionsByIds
      operationId: getAuctionsByIdsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnSale'
  '/marketplace/api/v4/ownerships/{id}/auction':
    get:
      tags:
        - auction-controller
      summary: getAuction
      operationId: getAuctionUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Auction'
    post:
      tags:
        - auction-controller
      summary: createAuction
      operationId: createAuctionUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuctionForm'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AuctionCreateResult'
    delete:
      tags:
        - auction-controller
      summary: deleteAuction
      operationId: deleteAuctionUsingDELETE
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AuctionDeleteResult'
  '/marketplace/api/v4/ownerships/{id}/offersInAuction':
    post:
      tags:
        - auction-controller
      summary: getOffersInAuction
      operationId: getOffersInAuctionUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferInAuctionPageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedOrder'
  '/marketplace/api/v4/collections/search':
    post:
      tags:
        - collection-search-controller
      summary: Search collections
      operationId: searchCollectionsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionPageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollectionRankingItem'
  '/marketplace/api/v4/collections/{id}/itemMeta/refresh':
    post:
      tags:
        - collection-controller
      summary: refreshItemsMeta
      operationId: refreshItemsMetaUsingPOST
      description: Refresh items meta in collection
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id of collection
          required: true
          style: simple
          schema:
            type: string
        - name: emptyOnly
          in: query
          description: refresh only empty meta
          required: false
          style: form
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/collections/{id}/owned/{owner}':
    get:
      tags:
        - collection-controller
      summary: getCollectionByOwner
      operationId: getCollectionByOwnerUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
        - name: owner
          required: true
          in: path
          description: owner (if it is null then require from security context )
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Token'
  '/marketplace/api/v4/collections/{id}':
    get:
      tags:
        - collection-controller
      summary: getCollection
      operationId: getCollectionUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Token'
    post:
      tags:
        - collection-controller
      summary: saveCollectionSettings
      operationId: saveCollectionSettingsUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionForm'
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/collections/byIds':
    post:
      tags:
        - collection-controller
      summary: getCollectionByIds
      operationId: getCollectionsByIdsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
  '/marketplace/api/v4/collections/{id}/claimOwnership':
    post:
      tags:
        - collection-controller
      summary: claimOwnership
      operationId: claimOwnership
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Token'
  '/marketplace/api/v4/collections/{id}/floorBids':
    get:
      tags:
        - collection-controller
      summary: floorBids
      operationId: getCollectionFloorBidsUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
        - name: userId
          in: query
          description: maker userId
          required: false
          schema:
            type: string
        - name: makers
          in: query
          description: bid maker addresses
          required: false
          schema:
            type: array
            items:
              minItems: 1
              maxItems: 20
              type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedOrder'
  '/marketplace/api/v4/users/{id}/marketplace/api/v4/collections':
    get:
      tags:
        - collection-controller
      summary: getCollectionsByMinterDeprecated
      operationId: getCollectionsByMinterDeprecatedUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
  '/marketplace/api/v4/users/{id}/collections':
    get:
      tags:
        - collection-controller
      summary: getCollectionsByMinter
      operationId: getCollectionsByMinterUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
  '/marketplace/api/v4/users/{id}/ownedCollections':
    get:
      tags:
        - collection-controller
      summary: getCollectionsByOwner
      operationId: getCollectionsByOwnerUsingGET
      parameters:
        - name: id
          in: path
          description: user id or wallet address
          required: true
          style: simple
          schema:
            type: string
        - name: size
          in: query
          description: Number of elements in response
          required: false
          style: form
          schema:
            type: integer
            format: int32
            default: 15
            minimum: 1
            maximum: 1000
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
  /marketplace/api/v4/config:
    get:
      tags:
        - config-controller
      summary: config
      operationId: configUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Config'
  /marketplace/api/v4/currencies:
    get:
      tags:
        - currency-controller
      summary: findAllowedCurrencies
      operationId: findAllowedCurrenciesUsingGET
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
    post:
      tags:
        - currency-controller
      summary: findCurrencies
      operationId: findCurrenciesUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyForm'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
  '/marketplace/api/v4/currencies/rate/{symbol}':
    get:
      tags:
        - currency-controller
      summary: rate
      operationId: rateUsingGET
      parameters:
        - name: symbol
          in: path
          description: symbol
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: number
                format: bigdecimal
  /marketplace/api/v4/followers:
    post:
      tags:
        - following-controller
      summary: getFollowers
      operationId: getFollowersUsingPOST
      parameters:
        - name: user
          in: query
          description: user
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtendedFollowing'
  /marketplace/api/v4/followings:
    post:
      tags:
        - following-controller
      summary: getFollowingsByOwner
      operationId: getFollowingsByOwnerUsingPOST
      parameters:
        - name: owner
          in: query
          description: owner
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtendedFollowing'
  /marketplace/api/v4/followings/byUsers:
    post:
      tags:
        - following-controller
      summary: getFollowingsByOwnerAndUserIds
      operationId: getFollowingsByOwnerAndUserIdsUsingPOST
      parameters:
        - name: owner
          in: query
          description: owner
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Following'
  '/marketplace/api/v4/users/{id}/follow':
    post:
      tags:
        - following-controller
      summary: follow
      operationId: followUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FollowingResult'
  '/marketplace/api/v4/wallets/{id}/follow':
    post:
      tags:
        - following-controller
      summary: follow by wallet
      operationId: followByWalletUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
            format: address
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/FollowingResult'
  '/marketplace/api/v4/users/{id}/unfollow':
    post:
      tags:
        - following-controller
      summary: unfollow
      operationId: unfollowUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
  /marketplace/api/v4/items/map:
    post:
      deprecated: true
      tags:
        - item-controller
      summary: getItemsByIdsDeprecated
      operationId: getItemsByIdsDeprecatedUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtendedItem'
  /marketplace/api/v4/items/byIds:
    post:
      tags:
        - item-controller
      summary: getItemsByIds
      operationId: getItemsByIdsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
  /marketplace/api/v4/items/search:
    post:
      tags:
        - item-search-controller
      summary: Search items
      operationId: searchItemsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemPageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
  '/marketplace/api/v4/items/searchCheapest':
    get:
      tags:
        - item-search-controller
      summary: Search cheapest items in collections
      operationId: searchCheapestUsingGET
      description: search cheapest items in collections
      parameters:
        - name: collectionIds
          in: query
          required: true
          schema:
            type: array
            minItems: 1
            maxItems: 50
            items:
              type: string
          description: Collections identifiers to which items belong
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 50
          description: Number of items in each collection in response
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollectionItems'
  '/marketplace/api/v4/items/{id}/meta/refresh':
    post:
      tags:
        - item-controller
      summary: refreshItemMeta
      operationId: refreshItemMetaUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: OK
  '/marketplace/api/v4/items/{id}/updateHasAvailableContent':
    post:
      tags:
        - item-controller
      summary: updateHasAvailableContent
      operationId: updateHasAvailableContentUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
        - name: hasAvailableContent
          in: query
          required: true
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/items/updateHasAvailableContent':
    post:
      tags:
        - item-controller
      summary: batchUpdateHasAvailableContent
      operationId: batchUpdateHasAvailableContentUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemContentAvailability'
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/items/{id}/visits':
    post:
      tags:
        - item-controller
      summary: visitItem
      operationId: visitItemUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '204':
          description: OK
  '/marketplace/api/v4/items/collections':
    get:
      tags:
        - item-controller
      summary: getCollectionsOfItemsByCreator
      operationId: getCollectionsOfItemsByCreatorUsingGET
      description: get collections of items by creator
      parameters:
        - name: creator
          in: query
          description: creator
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
  /marketplace/api/v4/items/recommendations:
    post:
      tags:
        - item-controller
      summary: getRecommendationsByItem
      operationId: getRecommendationsByItemUsingPOST
      description: get recommendations by item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRecommendationsPageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
  /marketplace/api/v4/items/liked:
    post:
      tags:
        - item-like-controller
      summary: getLiked
      operationId: getLikedUsingPOST
      parameters:
        - name: owner
          in: query
          description: owner
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtendedItemLike'
  /marketplace/api/v4/items/likes:
    post:
      tags:
        - item-like-controller
      summary: getLikes
      operationId: getLikesUsingPOST
      parameters:
        - name: owner
          in: query
          description: owner
          required: true
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemLike'
  '/marketplace/api/v4/items/{id}/like':
    post:
      tags:
        - item-like-controller
      summary: like
      operationId: likeUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/items/{id}/unlike':
    post:
      tags:
        - item-like-controller
      summary: unlike
      operationId: unlikeUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/collections/{id}/watch':
    post:
      tags:
        - collection-watchlist-controller
      summary: add collection to watchlist
      operationId: watchCollectionUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: if watchlist is full
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: if collection not found
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - collection-watchlist-controller
      summary: remove collection from watchlist
      operationId: unwatchCollectionUsingDELETE
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/collections/watchlist':
    get:
      tags:
        - collection-watchlist-controller
      summary: Get collections watchlist
      operationId: getCollectionsWatchlist
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRankingRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollectionRankingItem'
          headers:
            X-CONTINUATION:
              $ref: '#/components/headers/X-CONTINUATION'
  /marketplace/api/v4/collections/watchlisted:
    post:
      tags:
        - collection-watchlist-controller
      summary: getWatchlistedCollections
      operationId: getWatchlistedCollectionsUsingPOST
      description: Returns only watchlisted collections by current user from request body
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
  '/marketplace/api/v4/items/{id}/lock':
    post:
      tags:
        - lock-controller
      summary: createLock
      operationId: createLockUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockForm'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  '/marketplace/api/v4/items/{id}/unlock':
    post:
      tags:
        - lock-controller
      summary: unlock
      operationId: unlockUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UnlockResult'
  '/marketplace/api/v4/items/traits':
    get:
      tags:
        - trait-controller
      operationId: queryTraitsUsingGET
      parameters:
        - name: keys
          description: Trait keys
          in: query
          required: false
          schema:
            type: array
            minItems: 0
            maxItems: 200
            items:
              type: string
        - name: collectionIds
          in: query
          required: false
          schema:
            type: array
            minItems: 0
            maxItems: 10
            items:
              type: string
          description: Collections identifiers to which traits belong
        - name: valueFrequencySortOrder
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
          description: Sorting order for values in traits by their total count. Default sorting order is DESC
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trait'
  '/marketplace/api/v4/items/traits/rarity':
    post:
      tags:
        - trait-controller
      operationId: queryTraitsWithRarityUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraitsRarityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtendedTraitProperty'
  '/marketplace/api/v4/notifications/{owner}':
    post:
      tags:
        - notification-controller
      summary: getNotificationsByOwner
      operationId: getNotificationsByOwnerUsingPOST
      parameters:
        - name: owner
          in: path
          description: owner
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
  '/marketplace/api/v4/items/{id}/ownerships':
    get:
      deprecated: true
      tags:
        - ownership-controller
      summary: getItemOwnerships
      operationId: getItemOwnershipsUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ownership'
    post:
      tags:
        - ownership-controller
      summary: getItemOwnerships
      operationId: getItemOwnershipsUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ownership'
  '/marketplace/api/v4/ownerships/collections':
    get:
      tags:
        - ownership-controller
      summary: getCollectionsOfOwnershipsByOwnerOrUser
      operationId: getCollectionsOfOwnershipsByOwnerOrUserUsingGET
      description: get collections of ownerships by owner or user
      parameters:
        - name: owner
          in: query
          description: owner
          required: false
          style: form
          schema:
            type: string
        - name: user
          in: query
          description: user id
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
  '/marketplace/api/v4/ownerships/orders':
    post:
      tags:
        - ownership-controller
      summary: getOwnershipOrders
      operationId: getOwnershipOrdersUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedOrder'
  /marketplace/api/v4/ownerships/list:
    post:
      deprecated: true
      tags:
        - ownership-controller
      summary: getOwnershipsByIdsDeprecated
      operationId: getOwnershipsByIdsDeprecatedUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtendedOwnership'
  /marketplace/api/v4/ownerships/byIds:
    post:
      tags:
        - ownership-controller
      summary: getOwnershipsByIds
      operationId: getOwnershipsByIdsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ownership'
  /marketplace/api/v4/wallets/{id}/ownerships/byItemIds:
    post:
      tags:
        - ownership-controller
      summary: getWalletOwnershipsbyItemIds
      operationId: getWalletOwnershipsbyItemIdsUsingPOST
      parameters:
        - name: id
          in: path
          description: Wallet id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ownership'
  /marketplace/api/v4/users/{id}/ownerships/byItemIds:
    post:
      tags:
        - ownership-controller
      summary: getUserOwnershipsbyItemIds
      operationId: getUserOwnershipsbyItemIdsUsingPOST
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ownership'
  '/marketplace/api/v4/ownerships/{id}':
    get:
      tags:
        - ownership-controller
      summary: getOwnership
      operationId: getOwnershipUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Ownership'
  '/marketplace/api/v4/ownerships/{id}/hide':
    post:
      tags:
        - ownership-controller
      summary: hide
      operationId: hideUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JwtResult'
    delete:
      tags:
        - ownership-controller
      summary: open
      operationId: openUsingDELETE
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JwtResult'
  '/marketplace/api/v4/ownerships/{id}/order':
    get:
      tags:
        - ownership-controller
      summary: getOwnershipOrder
      operationId: getOwnershipOrderUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeprecatedOrder'
  '/marketplace/api/v4/ownerships/{id}/pin':
    post:
      tags:
        - ownership-controller
      summary: pin
      operationId: pinUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JwtResult'
    delete:
      tags:
        - ownership-controller
      summary: unpin
      operationId: unpinUsingDELETE
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/JwtResult'
  /marketplace/api/v4/profiles/list:
    post:
      tags:
        - profile-controller
      summary: getProfileList
      operationId: getProfileListUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: address
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
  '/marketplace/api/v4/profiles/{id}':
    get:
      tags:
        - profile-controller
      summary: getProfile
      operationId: getProfileUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Profile'
  '/marketplace/api/v4/profiles/{id}/badges':
    get:
      tags:
        - profile-controller
      summary: getProfileBadges
      operationId: getProfileBadgesUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/ProfileBadge'
  '/marketplace/api/v4/profiles/{id}/meta':
    get:
      tags:
        - profile-controller
      summary: getMeta
      operationId: getMetaUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProfileMeta'
  '/marketplace/api/v4/items/{id}/report':
    post:
      tags:
        - report-controller
      summary: report
      operationId: reportUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportForm'
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/items/{id}/bestOffer':
    get:
      tags:
        - sell-order-controller
      summary: getBestOfferForItem
      operationId: getBestOfferForItemUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeprecatedOrder'
  '/marketplace/api/v4/items/{id}/bestSellOrders':
    get:
      tags:
        - sell-order-controller
      summary: get best sell orders by item for each marketplace
      operationId: getBestSellOrdersForItemUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedOrder'
  '/marketplace/api/v4/items/{id}/offers':
    post:
      tags:
        - sell-order-controller
      summary: getOffersForItem
      operationId: getOffersForItemUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferPageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedOrder'
  /marketplace/api/v4/orders/validate:
    post:
      tags:
        - sell-order-controller
      summary: validateOrder
      operationId: validateOrderUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForm'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OrderValidateResult'
  '/marketplace/api/v4/orders/{id}':
    get:
      tags:
        - sell-order-controller
      summary: sellOrder
      operationId: sellOrderUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeprecatedOrder'
  '/marketplace/api/v4/orders/byMaker':
    description: 'Get orders by maker with some filters'
    post:
      tags:
        - sell-order-controller
      summary: ordersByMaker
      operationId: OrdersByMakerUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderByMakerPageRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedOrder'
  '/marketplace/api/v4/orders/byMaker/best':
    description: 'Get best order for item or collection by maker'
    post:
      tags:
        - sell-order-controller
      summary: getBestOfferByMaker
      operationId: getBestOfferByMakerUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BestOfferByMakersRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DeprecatedOrder'
  '/marketplace/api/v4/orders/{id}/wertConvert':
    post:
      tags:
        - sell-order-controller
      summary: wertConvert
      operationId: wertConvertUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WertConvertRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WertConvertResponse'
  '/marketplace/api/v4/urls/{url}':
    get:
      tags:
        - short-url-controller
      summary: getName
      operationId: getNameUsingGET
      parameters:
        - name: url
          in: path
          description: url
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ShortUrl'
  /subscribe:
    post:
      tags:
        - subscribe-controller
      summary: subscribe
      operationId: subscribeUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeForm'
      responses:
        '200':
          description: OK
  /marketplace/api/v4/twitter/confirm:
    post:
      tags:
        - twitter-controller
      summary: confirm
      operationId: confirmUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: username
          in: query
          description: username
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                enum:
                  - CONFIRMED
                  - GET_USER_ID_ERROR
                  - INCORRECT_USER_LINK_IN_TWITTED_MSG
                  - NOT_FOUND_TWITTED_MSG
                  - NOT_FOUND_TWITTER_USER
                  - USER_IS_SUSPENDED
  /marketplace/api/v4/twitter/confirmMsg:
    get:
      tags:
        - twitter-controller
      summary: getConfirmMsg
      operationId: getConfirmMsgUsingGET
      parameters:
        - name: owner
          in: query
          description: owner
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /marketplace/api/v4/nftstorage/rootUcan:
    get:
      tags:
        - nft-storage-controller
      summary: getRootUcan
      operationId: getRootUcanUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  '/marketplace/api/v4/users/{id}':
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
    post:
      tags:
        - user-controller
      summary: saveUser
      operationId: saveUserUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserForm'
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/users/{id}/delete':
    post:
      tags:
        - user-controller
      summary: deleteUser
      operationId: deleteUser
      description: Message to sign 'I want to delete my Rarible account $id at $date'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureForm'
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/users/{id}/notificationSettings':
    patch:
      tags:
        - user-controller
      summary: patchNotificationSettings
      operationId: patchNotificationSettingsUsingPATCH
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettings'
      responses:
        '204':
          description: OK
  '/marketplace/api/v4/users/byWallets':
    post:
      tags:
        - user-controller
      summary: getUsersByWallets
      operationId: getUsersByWalletsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  '/marketplace/api/v4/users/current':
    get:
      tags:
        - user-controller
      summary: getCurrentUser
      operationId: getCurrentUserUsingGET
      description: Get currently logged in user
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            '*/*':
              schema:
                type: object
        '403':
          description: Not authenticated
          content:
            '*/*':
              schema:
                type: object
  '/marketplace/api/v4/users/current/analytics':
    post:
      tags:
        - user-controller
      summary: postCurrentUserAnalytics
      operationId: postCurrentUserAnalyticsUsingPOST
      description: Post analytics of currently logged in user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '404':
          description: User not found
          content:
            '*/*':
              schema:
                type: object
        '403':
          description: Not authenticated
          content:
            '*/*':
              schema:
                type: object
  '/marketplace/api/v4/users/{id}/acceptTerms':
    post:
      tags:
        - user-controller
      summary: acceptTerms
      operationId: acceptTermsUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TermsForm'
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/users/{id}/confirmEmail/{key}':
    get:
      tags:
        - user-controller
      summary: confirmEmail
      operationId: confirmEmailUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
        - name: key
          in: path
          description: key
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EmailConfirmResult'
  '/marketplace/api/v4/users/{id}/emailPreference':
    post:
      tags:
        - user-controller
      summary: saveEmailPreference
      operationId: saveEmailPreferenceUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailPreferenceForm'
      responses:
        '200':
          description: OK
  '/marketplace/api/v4/users/{id}/resendEmailConfirmation':
    get:
      tags:
        - user-controller
      summary: resendEmailConfirmation
      operationId: resendEmailConfirmationUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ResendEmailConfirmationResult'
  '/marketplace/api/v4/users/{id}/secretUserPreference':
    post:
      tags:
        - user-controller
      summary: getSecretUserPreference
      operationId: getSecretUserPreferenceUsingPOST
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SecretUserPreferenceResult'
  '/marketplace/api/v4/users/{id}/wallet':
    post:
      tags:
        - user-controller
      summary: addUserWallet
      operationId: addUserWalletUsingPOST
      description: 'message format must be - "I want to add my wallet to my $account Rarible Account at $date."'
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserWalletForm'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Failed to add wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserWalletFormResponseError'
        '403':
          description: Not authenticated
          content:
            '*/*':
              schema:
                type: object
  '/marketplace/api/v4/users/{id}/wallet/{wallet}':
    delete:
      tags:
        - user-controller
      summary: deleteUserWallet
      operationId: deleteUserWalletUsingDELETE
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
        - name: wallet
          in: path
          description: walletId
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Failed to add wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserWalletResponseError'
        '403':
          description: Not authenticated
          content:
            '*/*':
              schema:
                type: object
  '/marketplace/api/v4/wallets/{id}/user':
    get:
      tags:
        - wallet-controller
      summary: getWalletUser
      operationId: getWalletUserUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          style: simple
          schema:
            type: string
            format: address
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
  '/marketplace/api/v4/wallets/{id}/checkRisk':
    get:
      tags:
        - wallet-controller
      summary: checkWalletRisk
      operationId: checkWalletRiskUsingGET
      parameters:
        - name: id
          in: path
          description: wallet address
          required: true
          style: simple
          schema:
            type: string
            format: address
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WalletCheckResult'
  /marketplace/api/v4/search/items:
    post:
      tags:
        - search-controller
      summary: Load searchable items
      operationId: loadSearchableItems
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchableItem'
          headers:
            X-CONTINUATION:
              $ref: '#/components/headers/X-CONTINUATION'
            X-TOTAL-HITS:
              $ref: '#/components/headers/X-TOTAL-HITS'
  /marketplace/api/v4/search/ownerships:
    post:
      tags:
        - search-controller
      summary: Load searchable ownerships
      operationId: loadSearchableOwnerships
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchableOwnership'
          headers:
            X-CONTINUATION:
              $ref: '#/components/headers/X-CONTINUATION'
            X-TOTAL-HITS:
              $ref: '#/components/headers/X-TOTAL-HITS'
  /marketplace/api/v4/search/collections:
    post:
      tags:
        - search-controller
      summary: Load searchable collections
      operationId: loadSearchableCollections
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchableCollection'
          headers:
            X-CONTINUATION:
              $ref: '#/components/headers/X-CONTINUATION'
            X-TOTAL-HITS:
              $ref: '#/components/headers/X-TOTAL-HITS'
  /marketplace/api/v4/search/users:
    post:
      tags:
        - search-controller
      summary: Load searchable users
      operationId: loadSearchableUsers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchableUser'
          headers:
            X-CONTINUATION:
              $ref: '#/components/headers/X-CONTINUATION'
            X-TOTAL-HITS:
              $ref: '#/components/headers/X-TOTAL-HITS'
  /marketplace/api/v4/search/traits:
    post:
      tags:
        - search-controller
      summary: Load searchable traits
      operationId: loadSearchableTraits
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchableTrait'
          headers:
            X-CONTINUATION:
              $ref: '#/components/headers/X-CONTINUATION'
            X-TOTAL-HITS:
              $ref: '#/components/headers/X-TOTAL-HITS'
  /marketplace/api/v4/search/users/{id}/followings:
    get:
      tags:
        - search-controller
      summary: Load user followings
      operationId: loadSearchableUserFollowings
      parameters:
        - name: id
          in: path
          style: simple
          required: true
          schema:
            type: string
            format: address
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
                  format: address
  /marketplace/api/v4/search/currencies:
    get:
      tags:
        - search-controller
      summary: Load Searchable Currencies
      operationId: loadSearchableCurrencies
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchableCurrency'
  /marketplace/api/v4/rankings/collections:
    post:
      tags:
        - ranking-controller
      summary: Get collections ranking
      operationId: getCollectionsRanking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRankingRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollectionRankingItem'
  /marketplace/api/v4/rankings/sellers:
    post:
      tags:
        - ranking-controller
      summary: Get sellers ranking
      operationId: getSellersRanking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerRankingItem'
  /marketplace/api/v4/rankings/buyers:
    post:
      tags:
        - ranking-controller
      summary: Get buyers ranking
      operationId: getBuyersRanking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRankingItem'
  /marketplace/api/v4/statistics/collections/{collectionId}/transactions:
    get:
      tags:
        - statistics-controller
      summary: Get historical statistics about collection transactions
      operationId: getCollectionTransactionsStatistics
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - name: filters
          in: query
          description: Filters of statistics
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatisticsGraph'
  /marketplace/api/v4/statistics/collections/{collectionId}/stats:
    get:
      tags:
        - statistics-controller
      summary: Get general statistics about collection
      operationId: getCollectionStats
      parameters:
        - $ref: '#/components/parameters/collectionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralCollectionStatistics'
  /marketplace/api/v4/statistics/collections/stats:
    post:
      tags:
        - statistics-controller
      summary: Get general statistics about collections
      operationId: getCollectionsStats
      requestBody:
        content:
          application/json:
            schema:
              type: array
              minItems: 1
              items:
                type: string
                format: address
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeneralCollectionStatistics'
  /marketplace/api/v4/statistics/collections/{collectionId}/sellers:
    get:
      tags:
        - statistics-controller
      summary: Get historical statistics about collection sellers
      operationId: getCollectionSellersStatistics
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - name: filters
          in: query
          description: Filters of statistics
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatisticsGraph'
  /marketplace/api/v4/statistics/collections/{collectionId}/prices:
    get:
      tags:
        - statistics-controller
      summary: Get historical statistics about collection items prices
      operationId: getCollectionPricesStatistics
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - name: currency
          in: query
          description: Currency of statistics
          required: true
          schema:
            $ref: '#/components/schemas/StatisticsCurrency'
        - name: filters
          in: query
          description: Filters of statistics
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionPricesStatistics'
  /marketplace/api/v4/statistics/collections/{collectionId}/owners:
    get:
      tags:
        - statistics-controller
      summary: Get historical statistics about collection owners
      operationId: getCollectionOwnersStatistics
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - name: filters
          in: query
          description: Filters of statistics
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatisticsGraph'
  /marketplace/api/v4/statistics/collections/{collectionId}/marketcap:
    get:
      tags:
        - statistics-controller
      description: Get historical statistics about collection market cap
      operationId: getCollectionMarketcapStatistics
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - name: currency
          in: query
          description: Currency of statistics
          required: true
          schema:
            $ref: '#/components/schemas/StatisticsCurrency'
        - name: filters
          in: query
          description: Filters of statistics
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatisticsGraph'
  /marketplace/api/v4/statistics/collections/{collectionId}/floorPrice:
    get:
      tags:
        - statistics-controller
      summary: Get historical statistics about collection item floor price
      operationId: getCollectionFloorPriceStatistics
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - name: currency
          in: query
          description: Currency of statistics
          required: true
          schema:
            $ref: '#/components/schemas/StatisticsCurrency'
        - name: filters
          in: query
          description: Filters of statistics
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatisticsGraph'
  /marketplace/api/v4/statistics/collections/{collectionId}/buyers:
    get:
      tags:
        - statistics-controller
      summary: Get historical statistics about collection buyers
      operationId: getCollectionBuyersStatistics
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - name: filters
          in: query
          description: Filters of statistics
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatisticsGraph'
  '/marketplace/api/v4/events/searchResultClick/items/{id}':
    post:
      tags:
        - event-controller
      summary: searchResultItemClick
      operationId: searchResultItemClickUsingPOST
      parameters:
        - name: id
          in: path
          description: ItemId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
  '/marketplace/api/v4/events/searchResultClick/users/{id}':
    post:
      tags:
        - event-controller
      summary: searchResultUserClick
      operationId: searchResultUserClickUsingPOST
      parameters:
        - name: id
          in: path
          description: UserId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
  '/marketplace/api/v4/events/searchResultClick/collections/{id}':
    post:
      tags:
        - event-controller
      summary: searchResultCollectionClick
      operationId: searchResultCollectionClickUsingPOST
      parameters:
        - name: id
          in: path
          description: CollectionId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
  '/marketplace/api/v4/popular/top':
    get:
      tags:
        - popular-controller
      summary: popularTop
      operationId: popularTopUsingGET
      parameters:
        - name: size
          in: query
          description: Number of elements in response
          required: false
          style: form
          schema:
            type: integer
            format: int32
            default: 15
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Popular'
  '/marketplace/api/v4/bids/received':
    get:
      tags:
        - bid-controller
      summary: Search bids for current user items/collections
      operationId: currentUserBidsUsingGET
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: blockchain
          in: query
          description: blockchain to filter bids
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/Blockchain'
        - name: platform
          in: query
          description: platform to filter bids
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/PlatformType'
        - name: continuation
          in: query
          description: continuation from header X-CONTINUATION
          required: false
          style: form
          schema:
            type: string
        - name: sort
          in: query
          description: sort order
          required: false
          style: form
          schema:
            type: string
            default: DATE_DESC
            enum:
              - DATE_DESC
              - DATE_ASC
              - PRICE_DESC
              - PRICE_ASC
              - EXPIRATION_DATE_DESC
              - EXPIRATION_DATE_ASC
        - name: size
          in: query
          description: number of records in result
          required: false
          style: form
          schema:
            minimum: 1
            maximum: 100
            default: 50
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedOrder'
          headers:
            X-CONTINUATION:
              $ref: '#/components/headers/X-CONTINUATION'
  '/marketplace/api/v4/bids/received/ownerships':
    get:
      tags:
        - bid-controller
      summary: Search ownerships with bids
      operationId: currentUserOwnershipsWithBidsUsingGET
      security:
        - bearerAuth: [ ]
        - cookieAuth: [ ]
      parameters:
        - name: blockchain
          in: query
          description: blockchain to filter bids
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/Blockchain'
        - name: platform
          in: query
          description: platform to filter bids
          required: false
          style: form
          schema:
            $ref: '#/components/schemas/PlatformType'
        - name: continuation
          in: query
          description: continuation from header X-CONTINUATION
          required: false
          style: form
          schema:
            type: string
        - name: sort
          in: query
          description: sort order
          required: false
          style: form
          schema:
            type: string
            default: DATE_DESC
            enum:
              - DATE_DESC
              - DATE_ASC
              - PRICE_DESC
              - PRICE_ASC
              - EXPIRATION_DATE_DESC
              - EXPIRATION_DATE_ASC
        - name: size
          in: query
          description: number of records in result
          required: false
          style: form
          schema:
            minimum: 1
            maximum: 100
            default: 50
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BestBidOwnership'
          headers:
            X-CONTINUATION:
              $ref: '#/components/headers/X-CONTINUATION'
components:
  headers:
    X-CONTINUATION:
      description: Continuation for next request
      schema:
        type: string
      example: { "params": [ ],"from": 1 }
    X-TOTAL-HITS:
      description: Total found hits
      schema:
        type: integer
      example: 100
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: RSESSIONID
  parameters:
    collectionId:
      name: collectionId
      in: path
      description: Identifier of collection
      required: true
      schema:
        type: string
        format: address
  schemas:
    ActivityAcceptOffer:
      title: ActivityAcceptOffer
      required:
        - buyValue
        - buyer
        - hash
        - price
        - transactionHash
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - accept_offer
        buyToken:
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        buyValue:
          type: number
          format: bigdecimal
        buyer:
          type: string
          format: address
        hash:
          type: string
        price:
          type: number
          format: bigdecimal
        priceUsd:
          type: number
          format: bigdecimal
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        itemId:
          type: string
        transactionHash:
          type: string
        value:
          type: number
          format: bigdecimal
    ActivityBurn:
      title: ActivityBurn
      required:
        - transactionHash
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - burn
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        transactionHash:
          type: string
        value:
          type: number
          format: bigdecimal
    ActivityBuy:
      title: ActivityBuy
      required:
        - buyValue
        - buyer
        - hash
        - price
        - transactionHash
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - buy
        buyToken:
          deprecated: true
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        buyValue:
          type: number
          format: bigdecimal
        buyer:
          type: string
          format: address
        hash:
          type: string
        price:
          type: number
          format: bigdecimal
        priceUsd:
          type: number
          format: bigdecimal
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        transactionHash:
          type: string
        value:
          type: number
          format: bigdecimal
    ActivityBuyGenArt:
      title: ActivityBuyGenArt
      required:
        - buyValue
        - buyer
        - hash
        - price
        - transactionHash
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - buy_gen_art
        buyToken:
          deprecated: true
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        buyValue:
          type: number
          format: bigdecimal
        buyer:
          type: string
          format: address
        hash:
          type: string
        price:
          type: number
          format: bigdecimal
        priceUsd:
          type: number
          format: bigdecimal
        token:
          type: string
          format: address
        transactionHash:
          type: string
        value:
          type: number
          format: bigdecimal
    ActivityCancel:
      title: ActivityCancel
      required:
        - hash
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - cancel
        buyToken:
          deprecated: true
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        hash:
          type: string
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        transactionHash:
          type: string
    ActivityCancelOffer:
      title: ActivityCancelOffer
      required:
        - hash
        - transactionHash
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - cancel_offer
        buyToken:
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        hash:
          type: string
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        transactionHash:
          type: string
        floorBid:
          type: boolean
    Activity:
      title: Activity
      required:
        - date
        - id
        - owner
      type: object
      properties:
        date:
          type: string
          format: date-time
        id:
          type: string
        owner:
          type: string
          format: address
      oneOf:
        - $ref: '#/components/schemas/ActivityLike'
        - $ref: '#/components/schemas/ActivityFollow'
        - $ref: '#/components/schemas/ActivityOrder'
        - $ref: '#/components/schemas/ActivityOffer'
        - $ref: '#/components/schemas/ActivityMatch'
        - $ref: '#/components/schemas/ActivityBuy'
        - $ref: '#/components/schemas/ActivityBuyGenArt'
        - $ref: '#/components/schemas/ActivityAcceptOffer'
        - $ref: '#/components/schemas/ActivityCancel'
        - $ref: '#/components/schemas/ActivityCancelOffer'
        - $ref: '#/components/schemas/ActivityMint'
        - $ref: '#/components/schemas/ActivityBurn'
        - $ref: '#/components/schemas/ActivityTransfer'
      discriminator:
        propertyName: '@type'
        mapping:
          like: '#/components/schemas/ActivityLike'
          follow: '#/components/schemas/ActivityFollow'
          order: '#/components/schemas/ActivityOrder'
          offer: '#/components/schemas/ActivityOffer'
          match: '#/components/schemas/ActivityMatch'
          buy: '#/components/schemas/ActivityBuy'
          buy_gen_art: '#/components/schemas/ActivityBuyGenArt'
          accept_offer: '#/components/schemas/ActivityAcceptOffer'
          cancel: '#/components/schemas/ActivityCancel'
          cancel_offer: '#/components/schemas/ActivityCancelOffer'
          mint: '#/components/schemas/ActivityMint'
          burn: '#/components/schemas/ActivityBurn'
          transfer: '#/components/schemas/ActivityTransfer'
    ActivityFilter:
      title: ActivityFilter
      type: object
      oneOf:
        - $ref: '#/components/schemas/ByFollowingsActivityFilter'
        - $ref: '#/components/schemas/ByItemActivityFilter'
        - $ref: '#/components/schemas/ByMeActivityFilter'
        - $ref: '#/components/schemas/ByUserActivityFilter'
        - $ref: '#/components/schemas/ByWalletActivityFilter'
        - $ref: '#/components/schemas/ByCollectionActivityFilter'
        - $ref: '#/components/schemas/ByAllActivityFilter'
      discriminator:
        propertyName: '@type'
        mapping:
          by_followings: '#/components/schemas/ByFollowingsActivityFilter'
          by_item: '#/components/schemas/ByItemActivityFilter'
          by_me: '#/components/schemas/ByMeActivityFilter'
          by_user: '#/components/schemas/ByUserActivityFilter'
          by_wallet: '#/components/schemas/ByWalletActivityFilter'
          by_collection: '#/components/schemas/ByCollectionActivityFilter'
          by_all: '#/components/schemas/ByAllActivityFilter'
    ActivityFollow:
      title: ActivityFollow
      required:
        - user
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - follow
        user:
          type: string
          format: address
    ActivityLike:
      title: ActivityLike
      required:
        - itemId
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - like
        token:
          type: string
        itemId:
          type: string
    ActivityMatch:
      title: ActivityMatch
      required:
        - buyValue
        - buyer
        - transactionHash
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - match
        buyHash:
          type: string
        buyToken:
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        buyItemId:
          type: string
        buyValue:
          type: number
          format: bigdecimal
        buyer:
          type: string
          format: address
        hash:
          type: string
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        transactionHash:
          type: string
        value:
          type: number
          format: bigdecimal
    ActivityMint:
      title: ActivityMint
      required:
        - transactionHash
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - mint
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        transactionHash:
          type: string
        value:
          type: number
          format: bigdecimal
    ActivityOffer:
      title: ActivityOffer
      required:
        - buyValue
        - hash
        - price
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - offer
        buyToken:
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        buyItemId:
          type: string
        buyValue:
          type: number
          format: bigdecimal
        hash:
          type: string
        price:
          type: number
          format: bigdecimal
        priceUsd:
          type: number
          format: bigdecimal
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        value:
          type: number
          format: bigdecimal
        floorBid:
          type: boolean
    ActivityOrder:
      title: ActivityOrder
      required:
        - buyValue
        - hash
        - price
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - order
        buyToken:
          deprecated: true
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        buyValue:
          type: number
          format: bigdecimal
        hash:
          type: string
        price:
          type: number
          format: bigdecimal
        priceUsd:
          type: number
          format: bigdecimal
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        value:
          type: number
          format: bigdecimal
    ActivityPageRequest:
      title: ActivityPageRequest
      type: object
      properties:
        continuation:
          type: string
        filter:
          $ref: '#/components/schemas/ActivityFilter'
        size:
          minimum: 1
          maximum: 100
          default: 50
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/ActivitySort'
        types:
          type: array
          items:
            $ref: '#/components/schemas/ActivityType'
    ActivityType:
      type: string
      enum:
        - AUCTION
        - BID
        - BURN
        - BUY
        - CANCEL
        - CANCEL_BID
        - FOLLOWING
        - LIKE
        - MINT
        - ORDER
        - SALE
        - TRANSFER
        - CARBON_NEGATIVE
    ActivityTransfer:
      title: ActivityTransfer
      required:
        - from
        - transactionHash
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - transfer
        from:
          type: string
          format: address
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        transactionHash:
          type: string
        value:
          type: number
          format: bigdecimal
    OrderFormAsset:
      title: OrderFormAsset
      required:
        - assetType
        - value
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        value:
          type: number
          format: bigdecimal
    AssetClass:
      type: string
      enum:
        - ERC1155
        - ERC1155_LAZY
        - ERC20
        - ERC721
        - ERC721_LAZY
        - ETH
        - ETH_COLLECTION
        - FLOW_NFT
        - FLOW_FT
        - XTZ
        - TEZOS_FT
        - TEZOS_NFT
        - TEZOS_MT
        - SOLANA_NFT
        - SOLANA_FT
        - SOL
        - GEN_ART
        - CRYPTO_PUNKS
        - MATIC
        - IMX_ETH
    AssetType:
      title: AssetType
      type: object
      required:
        - assetClass
      properties:
        assetClass:
          $ref: '#/components/schemas/AssetClass'
        contract:
          type: string
          format: address
        tokenId:
          type: number
          format: biginteger
        itemId:
          type: string
    FeeResponse:
      title: FeeResponse
      required:
        - buyerFee
        - sellerFee
      type: object
      properties:
        buyerFee:
          type: integer
          format: int32
        sellerFee:
          type: integer
          format: int32
    Auction:
      title: Auction
      required:
        - endDate
        - extended
        - inProgress
        - initEndDate
        - minPrice
        - minStep
        - startDate
        - status
        - updateDate
        - onChain
      type: object
      properties:
        id:
          type: string
        currency:
          deprecated: true
          type: string
          format: address
        currencyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        endDate:
          type: string
          format: date-time
        extended:
          type: boolean
        inProgress:
          type: boolean
        initEndDate:
          type: string
          format: date-time
        minPrice:
          type: number
          format: bigdecimal
        minStep:
          type: number
          format: bigdecimal
        startDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ENDED
            - NOT_STARTED
            - STARTED
        updateDate:
          type: string
          format: date-time
        onChain:
          type: boolean
        buyOutPrice:
          type: number
          format: bigdecimal
    AuctionCreateResult:
      title: AuctionCreateResult
      required:
        - status
        - success
      type: object
      properties:
        status:
          type: string
          enum:
            - AUCTION_COULD_BE_CREATED_FOR_ERC721_ONLY
            - AUCTION_FOR_ITEM_EXISTS
            - CREATED
            - INCORRECT_CURRENCY
            - START_DATE_MUST_BE_BEFORE_END_DATE
        success:
          type: boolean
    AuctionDeleteResult:
      title: AuctionDeleteResult
      required:
        - status
        - success
      type: object
      properties:
        status:
          type: string
          enum:
            - DELETED
            - OFFER_FOR_AUCTION_EXISTS
        success:
          type: boolean
    AuctionEnded:
      title: AuctionEnded
      required:
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - ended
        highestBid:
          $ref: '#/components/schemas/DeprecatedOrder'
    AuctionForm:
      title: AuctionForm
      required:
        - currency
        - endDate
        - minPrice
        - startDate
      type: object
      properties:
        currency:
          type: string
          format: address
        endDate:
          type: string
          format: date-time
        minPrice:
          type: number
          format: bigdecimal
        startDate:
          type: string
          format: date-time
    AuctionLogEventData:
      title: AuctionLogEventData
      type: object
      oneOf:
        - $ref: '#/components/schemas/AuctionEnded'
      discriminator:
        propertyName: '@type'
        mapping:
          ended: '#/components/schemas/AuctionEnded'
    BadgeType:
      title: BadgeType
      type: string
      enum:
        - VERIFIED
        - RE_VERIFIED
    Binary:
      title: Binary
      required:
        - value
      type: object
      properties:
        value:
          type: string
    ByFollowingsActivityFilter:
      title: ByFollowingsActivityFilter
      required:
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - by_followings
        address:
          type: string
          format: address
          deprecated: true
        userId:
          type: string
        blockchains:
          type: array
          items:
            $ref: '#/components/schemas/Blockchain'
    ByAllActivityFilter:
      title: ByAllActivityFilter
      required:
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - by_all
        blockchains:
          type: array
          items:
            $ref: '#/components/schemas/Blockchain'
    ByItemActivityFilter:
      title: ByItemActivityFilter
      required:
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - by_item
        address:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
    ByMeActivityFilter:
      title: ByMeActivityFilter
      required:
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - by_me
        address:
          type: string
          format: address
          deprecated: true
        userId:
          type: string
        blockchains:
          type: array
          items:
            $ref: '#/components/schemas/Blockchain'
    ByUserActivityFilter:
      title: ByUserActivityFilter
      required:
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - by_user
        address:
          type: string
          format: address
          deprecated: true
        userId:
          type: string
        blockchains:
          type: array
          items:
            $ref: '#/components/schemas/Blockchain'
    ByWalletActivityFilter:
      title: ByWalletActivityFilter
      required:
        - address
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - by_wallet
        address:
          type: string
          format: address
    ByCollectionActivityFilter:
      title: ByCollectionActivityFilter
      required:
        - address
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - by_collection
        address:
          type: string
          format: address
    ActivitySort:
      type: string
      enum:
        - LATEST_FIRST
        - EARLIEST_FIRST
    CollectionForm:
      title: CollectionForm
      type: object
      properties:
        name:
          type: string
        keywords:
          type: string
        cover:
          type: string
        description:
          type: string
        pic:
          type: string
        shortUrl:
          type: string
        links:
          description: '{ "WEB_SITE_URL": "some url", "DISCORD": "some url", "YOUTUBE": "some url", "FACEBOOK": "some url", "TWITCH": "some url", "TIKTOK": "some url", "SNAPCHAT": "some url" }'
          type: object
          additionalProperties:
            type: string
        tags:
          description: User categories
          type: array
          uniqueItems: true
          items:
            type: string
    Config:
      title: Config
      required:
        - auctionMinPriceRelativeChange
        - ignoringPriceDecreasingLevel
        - wethContractAddress
      type: object
      properties:
        maxMcdonaldsItems:
          type: integer
          format: int32
          default: 5
        auctionMinPriceEthChange:
          deprecated: true
          type: number
          format: bigdecimal
        auctionMinPriceRelativeChange:
          type: number
          format: bigdecimal
        buyerFee:
          deprecated: true
          type: integer
          format: int32
        erc20TransferProxyAddress:
          deprecated: true
          type: string
          format: address
        exchangeV1ContractAddress:
          deprecated: true
          type: string
          format: address
        ignoringPriceDecreasingLevel:
          type: number
          format: bigdecimal
        ipfsUrl:
          deprecated: true
          type: string
        sellerFee:
          deprecated: true
          type: integer
          format: int32
        transferProxyAddress:
          deprecated: true
          type: string
          format: address
        transferProxyForDeprecatedAddress:
          deprecated: true
          type: string
          format: address
        wethContractAddress:
          type: string
          format: address
    CropMode:
      title: CropMode
      type: string
      description: >
        A crop mode that determines how to transform the image for fitting into the desired width & height dimensions.<br>
        Configured in Cloudinary.
      enum:
        - FIT
        - THUMB
        - CROP
    ContentMeta:
      title: ContentMeta
      type: object
      properties:
        animationMeta:
          $ref: '#/components/schemas/MediaMeta'
        imageMeta:
          $ref: '#/components/schemas/MediaMeta'
    ContentType:
      title: ContentType
      type: string
      enum:
        - IMAGE
        - VIDEO
        - AUDIO
        - THREE_D
        - HTML
        - AR
    Currency:
      title: Currency
      required:
        - id
        - blockchain
        - name
        - symbol
      type: object
      properties:
        id:
          type: string
        address:
          deprecated: true
          type: string
          format: address
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        tokenId:
          deprecated: true
          type: string
        allowed:
          deprecated: true
          type: boolean
        decimals:
          deprecated: true
          type: integer
          format: int32
        name:
          type: string
        order:
          deprecated: true
          type: integer
          format: int32
        rate:
          type: number
          format: bigdecimal
        rateEth:
          deprecated: true
          type: number
          format: bigdecimal
        symbol:
          type: string
        rateUpdating:
          deprecated: true
          type: boolean
        blacklisted:
          type: boolean
          default: false
    Dimension:
      title: Dimension
      type: object
      required:
        - width
        - height
      properties:
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
    EmailConfirmResult:
      title: EmailConfirmResult
      required:
        - status
        - success
      type: object
      properties:
        status:
          type: string
          enum:
            - CONFIRMATION_TIME_EXPIRED
            - CONFIRMATION_WAS_NOT_SENT
            - CONFIRMED
            - EMAIL_IS_ALREADY_CONFIRMED
            - TOO_MANY_CONFIRMATION_ATTEMPTS
            - WRONG_CONFIRMATION_CODE
        success:
          type: boolean
    EmailPreferenceForm:
      title: EmailPreferenceForm
      type: object
      properties:
        email:
          type: string
    SignatureForm:
      title: SignatureForm
      type: object
      required:
        - date
        - signature
        - signer
      properties:
        date:
          type: string
          format: date-time
          description: 'ISO 8601, Ex: 2021-09-17T04:52:42.462Z'
        signature:
          type: string
        signer:
          type: string
          format: address
        publicKey:
          type: string
    AddUserWalletForm:
      title: AddUserWalletForm
      type: object
      required:
        - date
        - blockchain
        - address
        - signature
      properties:
        date:
          type: string
          format: date-time
          description: 'ISO 8601, Ex. 2021-09-17T04:52:42.462Z'
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        address:
          type: string
          format: address
        signature:
          type: string
        publicKey:
          type: string
    AddUserWalletFormResponseError:
      title: AddUserWalletFormResponseError
      type: object
      properties:
        code:
          type: string
          enum:
            - ALREADY_ADDED
            - BLACKLISTED
            - TOO_MUCH_WALLETS
            - USED_IN_ANOTHER_PROFILE
        message:
          type: string
        success:
          type: boolean
    DeleteUserWalletResponseError:
      title: DeleteUserWalletResponseError
      type: object
      properties:
        code:
          type: string
          enum:
            - LAST_WALLET
        message:
          type: string
        success:
          type: boolean
    ExtendedFollowing:
      title: ExtendedFollowing
      required:
        - following
        - id
        - owner
        - user
      type: object
      properties:
        following:
          $ref: '#/components/schemas/Following'
        id:
          type: string
        owner:
          $ref: '#/components/schemas/Profile'
        user:
          $ref: '#/components/schemas/Profile'
    ExtendedItem:
      title: ExtendedItem
      deprecated: true
      required:
        - id
        - item
        - meta
        - properties
      type: object
      properties:
        id:
          type: string
        item:
          $ref: '#/components/schemas/Item'
        meta:
          $ref: '#/components/schemas/ContentMeta'
        properties:
          $ref: '#/components/schemas/ItemProperties'
    ExtendedItemLike:
      title: ExtendedItemLike
      required:
        - id
        - item
        - itemLike
        - meta
        - properties
      type: object
      properties:
        id:
          type: string
        item:
          $ref: '#/components/schemas/Item'
        itemLike:
          $ref: '#/components/schemas/ItemLike'
        meta:
          $ref: '#/components/schemas/ContentMeta'
        properties:
          $ref: '#/components/schemas/ItemProperties'
    ExtendedOwnership:
      deprecated: true
      title: ExtendedOwnership
      required:
        - id
        - item
        - meta
        - ownership
        - properties
      type: object
      properties:
        id:
          type: string
        item:
          $ref: '#/components/schemas/Item'
        meta:
          $ref: '#/components/schemas/ContentMeta'
        ownership:
          $ref: '#/components/schemas/Ownership'
        properties:
          $ref: '#/components/schemas/ItemProperties'
    Following:
      title: Following
      required:
        - createDate
        - deleted
        - id
        - owner
        - user
      type: object
      properties:
        createDate:
          type: string
          format: date-time
        deleted:
          type: boolean
        id:
          type: string
        owner:
          type: string
          format: address
        user:
          type: string
          format: address
    FollowingResult:
      title: FollowingResult
      required:
        - status
        - success
      type: object
      properties:
        status:
          type: string
          enum:
            - CREATED
            - FOLLOWING_LIMIT_EXCEEDED
        success:
          type: boolean
    Creator:
      title: Creator
      type: object
      required:
        - address
        - value
      properties:
        address:
          type: string
          format: address
        value:
          type: integer
          format: int32
          description: percent * 100
    Item:
      title: Item
      required:
        - blacklisted
        - blockchain
        - categories
        - deleted
        - id
        - lazySupply
        - likes
        - owners
        - sellers
        - supply
        - token
        - totalStock
        - unlockable
        - verified
        - meta
        - properties
      type: object
      properties:
        blacklisted:
          type: boolean
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        categories:
          uniqueItems: true
          type: array
          items:
            type: string
        creator:
          type: string
          format: address
        creators:
          type: array
          items:
            $ref: '#/components/schemas/Creator'
        deleted:
          type: boolean
        id:
          type: string
        lastSellPrice:
          $ref: '#/components/schemas/Price'
        lazySupply:
          type: number
          format: bigdecimal
        likes:
          type: integer
          format: int64
        offerV2:
          $ref: '#/components/schemas/DeprecatedOrder'
        offer:
          $ref: '#/components/schemas/DeprecatedOrder'
        owners:
          deprecated: true
          type: array
          items:
            type: string
            format: address
        ownership:
          $ref: '#/components/schemas/Ownership'
        royalties:
          type: array
          deprecated: true
          description: Use SDK to get royalties by item. Will be deleted in future releases
          items:
            $ref: '#/components/schemas/Royalty'
        sellers:
          type: integer
          format: int32
        supply:
          type: number
          format: bigdecimal
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        totalStock:
          type: number
          format: bigdecimal
        unlockable:
          type: boolean
        verified:
          type: boolean
        hasAvailableContent:
          type: boolean
        version:
          type: integer
          format: int64
        statuses:
          type: array
          description: Unique statuses of all ownerships of this item
          items:
            $ref: '#/components/schemas/OwnershipStatus'
        meta:
          $ref: '#/components/schemas/ContentMeta'
        properties:
          $ref: '#/components/schemas/ItemProperties'
        carbonNegativeStatus:
          $ref: '#/components/schemas/CarbonNegativeStatus'
        carbonNegativeStatusInfo:
          $ref: '#/components/schemas/CarbonNegativeStatusInfo'
        rarity:
          $ref: '#/components/schemas/ItemRarity'
        hasRewards:
          type: boolean
          default: false
        suspicious:
          type: boolean
          default: false
    CarbonNegativeStatusInfo:
      title: CarbonNegativeStatus
      type: object
      required:
        - sponsor
        - paymentDate
      properties:
        sponsor:
          type: string
          format: address
        paymentDate:
          type: string
          format: date-time
    ItemAttribute:
      title: ItemAttribute
      required:
        - key
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        type:
          description: open api type
          type: string
        format:
          description: open api format
          type: string
    ItemHistory:
      title: ItemHistory
      required:
        - type
      type: object
      properties:
        date:
          deprecated: true
          type: string
          format: date-time
        owner:
          deprecated: true
          type: string
          format: address
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        type:
          type: string
          enum:
            - BUY
            - CANCEL
            - FAKE
            - ROYALTY
            - TRANSFER
    ItemLike:
      title: ItemLike
      required:
        - createDate
        - id
        - itemId
        - owner
      type: object
      properties:
        createDate:
          type: string
          format: date-time
        deleted:
          deprecated: true
          type: boolean
        id:
          type: string
        itemId:
          type: string
        owner:
          type: string
          format: address
    ItemProperties:
      title: ItemProperties
      required:
        - attributes
        - name
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttribute'
        description:
          type: string
        name:
          type: string
        mediaEntries:
          type: array
          description: >
            Media list.<br>
            IMAGE[PREVIEW, BIG, ORIGINAL] - format - auto<br>
            VIDEO[PREVIEW, BIG, ORIGINAL] - gif will be converted with type VIDEO mp4<br>
            AUDIO[ORIGINAL]<br>
            THREE_D[ORIGINAL]<br>
            HTML[ORIGINAL]<br>
            AR[ORIGINAL]<br>
            If the user uploaded both gif and mp4, then preview will be made of mp4<br>
            For preview VIDEO takes priority<br>
          items:
            $ref: '#/components/schemas/Media'
    JwtResult:
      title: JwtResult
      required:
        - status
        - success
      type: object
      properties:
        status:
          type: string
          enum:
            - SUCCESS
        success:
          type: boolean
    LockForm:
      title: LockForm
      required:
        - content
      type: object
      properties:
        content:
          type: string
    Media:
      title: Media
      required:
        - url
        - sizeType
        - contentType
      description: >
        Width and height are dimensions of modified media. Different for each sizeType<br>
        If original data is of type gif we transform it to mp4 for traffic optimization.<br>
        Item<br>
        preview - c_fit,f_webp,h_400,w_400<br>
        big - c_fit,f_webp,h_1000,w_1000<br>
        mobile_low - w_375
        mobile_medium - w_750
        mobile_high - w_1125
        Avatar<br>
        preview - c_thumb,f_webp,g_center,w_100,w_100<br>
        big - c_thumb,f_webp,g_center,w_240,w_240<br>
        Cover<br>
        c_crop,f_webp,g_center,h_400,w_2200<br>
        c_crop,f_webp,g_center,h_200,w_1000<br>
        Featured<br>
        c_thumb,f_webp,g_center,w_400,h_400
        cropMode - Only for VIDEO and IMAGE
      properties:
        url:
          type: string
          format: uri
        dimension:
          $ref: '#/components/schemas/Dimension'
        sizeType:
          $ref: '#/components/schemas/SizeType'
        contentType:
          $ref: '#/components/schemas/ContentType'
        cropMode:
          $ref: '#/components/schemas/CropMode'
        sourceMimeType:
          type: string
    MediaMeta:
      title: MediaMeta
      type: object
      properties:
        height:
          type: integer
          format: int32
        type:
          description: mime-type
          example: 'image/gif'
          type: string
        width:
          type: integer
          format: int32
    Notification:
      title: Notification
      required:
        - data
        - date
        - id
        - owner
        - read
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NotificationData'
        date:
          type: string
          format: date-time
        eventKey:
          type: string
        id:
          type: string
        owner:
          type: string
          format: address
        read:
          type: boolean
        version:
          type: integer
          format: int64
    NotificationAcceptOffer:
      title: NotificationAcceptOffer
      required:
        - buyToken
        - price
        - transactionHash
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - accept_offer
        buyToken:
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        price:
          type: number
          format: bigdecimal
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        transactionHash:
          type: string
    NotificationAnnounce:
      title: NotificationAnnounce
      required:
        - text
        - token
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - announce
        text:
          type: string
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
    NotificationBuy:
      title: NotificationBuy
      required:
        - price
        - token
        - transactionHash
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - buy
        buyToken:
          deprecated: true
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        transactionHash:
          type: string
    NotificationData:
      title: NotificationData
      type: object
      oneOf:
        - $ref: '#/components/schemas/NotificationAcceptOffer'
        - $ref: '#/components/schemas/NotificationAnnounce'
        - $ref: '#/components/schemas/NotificationBuy'
        - $ref: '#/components/schemas/NotificationOffer'
        - $ref: '#/components/schemas/NotificationCollectionOffer'
        - $ref: '#/components/schemas/NotificationOfferInactivation'
        - $ref: '#/components/schemas/NotificationOutBid'
        - $ref: '#/components/schemas/NotificationCollectionOutBid'
        - $ref: '#/components/schemas/NotificationRari'
        - $ref: '#/components/schemas/NotificationRoyalty'
        - $ref: '#/components/schemas/NotificationCollectionDmca'
        - $ref: '#/components/schemas/NotificationItemDmca'
        - $ref: '#/components/schemas/NotificationPurchase'
        - $ref: '#/components/schemas/NotificationListed'
      discriminator:
        propertyName: '@type'
        mapping:
          buy: '#/components/schemas/NotificationBuy'
          accept_offer: '#/components/schemas/NotificationAcceptOffer'
          offer: '#/components/schemas/NotificationOffer'
          collection_offer: '#/components/schemas/NotificationCollectionOffer'
          offer_inactivation: '#/components/schemas/NotificationOfferInactivation'
          out_bid: '#/components/schemas/NotificationOutBid'
          collection_out_bid: '#/components/schemas/NotificationCollectionOutBid'
          rari: '#/components/schemas/NotificationRari'
          announce: '#/components/schemas/NotificationAnnounce'
          royalty: '#/components/schemas/NotificationRoyalty'
          collection_dmca: '#/components/schemas/NotificationCollectionDmca'
          item_dmca: '#/components/schemas/NotificationItemDmca'
          purchase: '#/components/schemas/NotificationPurchase'
          listed: '#/components/schemas/NotificationListed'
    NotificationOffer:
      title: NotificationOffer
      required:
        - buyToken
        - price
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - offer
        buyToken:
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
    NotificationCollectionOffer:
      title: NotificationCollectionOffer
      required:
        - buyToken
        - price
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - collection_offer
        buyToken:
          type: string
          format: address
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
    NotificationOfferInactivation:
      title: NotificationOfferInactivation
      required:
        - floorBid
        - currencyId
        - price
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - offer_inactivation
        floorBid:
          type: boolean
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
        token:
          type: string
          format: address
        itemId:
          type: string
    NotificationOutBid:
      title: NotificationOutBid
      required:
        - price
        - buyToken
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - out_bid
        buyToken:
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
        token:
          deprecated: true
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
    NotificationCollectionOutBid:
      title: NotificationOutBid
      required:
        - price
        - buyToken
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - collection_out_bid
        buyToken:
          type: string
          format: address
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
    NotificationRari:
      title: NotificationRari
      required:
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - rari
        value:
          type: number
          format: double
    NotificationRoyalty:
      title: NotificationRoyalty
      required:
        - token
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - royalty
        currency:
          type: string
          format: address
        currencyId:
          type: string
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        value:
          type: number
          format: double
    NotificationCollectionDmca:
      title: NotificationCollectionDmca
      required:
        - token
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - collection_dmca
        token:
          type: string
          format: address
    NotificationItemDmca:
      title: NotificationItemDmca
      required:
        - token
        - itemId
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - item_dmca
        token:
          type: string
          format: address
        itemId:
          type: string
    NotificationPurchase:
      title: NotificationPurchase
      required:
        - token
        - itemId
        - currencyId
        - price
        - transactionHash
        - value
        - fromAddress
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - purchase
        token:
          type: string
          format: address
        itemId:
          type: string
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
        transactionHash:
          type: string
        value:
          type: number
          format: biginteger
        fromAddress:
          type: string
          format: address
    NotificationListed:
      title: NotificationListed
      required:
        - token
        - itemId
        - currencyId
        - price
        - value
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - listed
        token:
          type: string
          format: address
        itemId:
          type: string
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
        value:
          type: number
          format: biginteger
    OnSale:
      title: OnSale
      required:
        - id
      type: object
      properties:
        auction:
          $ref: '#/components/schemas/Auction'
        id:
          type: string
    Order:
      title: Order
      type: object
      required:
        - id
        - side
        - currencyId
        - price
        - value
        - fill
        - asset
        - status
        - creator
        - updatedAt
        - blockchain
        - type
      properties:
        id:
          type: string
        side:
          $ref: '#/components/schemas/OrderSide'
        currencyId:
          type: string
        price:
          type: number
          format: bigdecimal
        value:
          type: number
          format: biginteger
        fill:
          type: number
          format: biginteger
        asset:
          $ref: '#/components/schemas/OrderAsset'
        status:
          $ref: '#/components/schemas/OrderStatus'
        creator:
          type: string
          format: address
        updatedAt:
          type: string
          format: date-time
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        type:
          $ref: '#/components/schemas/OrderType'
    DeprecatedOrder:
      title: DeprecatedOrder
      deprecated: true
      required:
        - active
        - buyPrice
        - cancelled
        - data
        - id
        - blockchain
        - itemId
        - lastUpdateAt
        - makeValueCurrency
        - maker
        - offer
        - pending
        - sellPrice
        - takeValueCurrency
        - type
      type: object
      properties:
        active:
          type: boolean
        buyPrice:
          type: number
          format: bigdecimal
        cancelled:
          type: boolean
        completed:
          type: boolean
          deprecated: true
        createdAt:
          type: string
          format: date-time
          deprecated: true
        expirationDate:
          type: string
          format: date-time
        id:
          type: string
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        itemId:
          type: string
        lastUpdateAt:
          type: string
          format: date-time
        data:
          $ref: '#/components/schemas/OrderData'
        makeCurrency:
          $ref: '#/components/schemas/Currency'
        makePriceUsd:
          type: number
          format: bigdecimal
        makeStockValue:
          type: number
          deprecated: true
          format: bigdecimal
        makeToken:
          type: string
          format: address
        makeTokenId:
          type: string
        makeValueCurrency:
          type: number
          format: bigdecimal
        maker:
          type: string
          format: address
        offer:
          type: boolean
        salt:
          type: string
          deprecated: true
        sellOrder:
          type: boolean
        sellPrice:
          type: number
          deprecated: true
          format: bigdecimal
        soldValue:
          type: number
          format: bigdecimal
          deprecated: true
        takeCurrency:
          $ref: '#/components/schemas/Currency'
        takePriceUsd:
          type: number
          format: bigdecimal
        takeToken:
          type: string
          format: address
        takeTokenId:
          type: string
        takeValueCurrency:
          type: number
          format: bigdecimal
        taker:
          type: string
          format: address
        type:
          $ref: '#/components/schemas/OrderType'
        floorBid:
          type: boolean
        fill:
          type: number
          format: bigdecimal
        platform:
          $ref: '#/components/schemas/PlatformType'
    OrderType:
      title: OrderType
      type: string
      enum:
        - RARIBLE_V1
        - RARIBLE_V2
        - OPEN_SEA_V1
        - SEAPORT_V1
        - FLOW
        - TEZOS
        - SOLANA
        - CRYPTO_PUNKS
        - LOOKSRARE
        - X2Y2
        - IMMUTABLEX
        - SUDOSWAP
    OrderData:
      title: OrderData
      deprecated: true
      type: object
      oneOf:
        - $ref: '#/components/schemas/OrderDataLegacy'
        - $ref: '#/components/schemas/OrderRaribleV2DataV1'
        - $ref: '#/components/schemas/OrderOpenSeaV1DataV1'
        - $ref: '#/components/schemas/SeaportDataV1'
        - $ref: '#/components/schemas/CryptoPunksData'
        - $ref: '#/components/schemas/FlowOrderDataV1'
        - $ref: '#/components/schemas/TezosOrderDataRaribleV2DataV1'
        - $ref: '#/components/schemas/TezosOrderDataRaribleV2DataV2'
        - $ref: '#/components/schemas/SolanaAuctionHouseDataV1'
        - $ref: '#/components/schemas/LooksrareOrderData'
        - $ref: '#/components/schemas/X2Y2OrderData'
        - $ref: '#/components/schemas/ImmutablexOrderData'
        - $ref: '#/components/schemas/SudoSwapAmmData'
      discriminator:
        propertyName: 'dataType'
        mapping:
          RARIBLE_V2_DATA_V1: '#/components/schemas/OrderRaribleV2DataV1'
          LEGACY: '#/components/schemas/OrderDataLegacy'
          ORDER_OPEN_SEA_V1_DATA_V1: '#/components/schemas/OrderOpenSeaV1DataV1'
          SEAPORT_V1: '#/components/schemas/SeaportDataV1'
          CRYPTO_PUNKS: '#/components/schemas/CryptoPunksData'
          FLOW: '#/components/schemas/FlowOrderDataV1'
          TEZOS: '#/components/schemas/TezosOrderDataRaribleV2DataV1'
          TEZOS_V2: '#/components/schemas/TezosOrderDataRaribleV2DataV2'
          SOLANA: '#/components/schemas/SolanaAuctionHouseDataV1'
          LOOKSRARE: '#/components/schemas/LooksrareOrderData'
          X2Y2: '#/components/schemas/X2Y2OrderData'
          IMMUTABLEX: '#/components/schemas/ImmutablexOrderData'
    ImmutablexOrderData:
      title: ImmutablexOrderData
      deprecated: true
      type: object
      required:
        - dataType
      properties:
        dataType:
          type: string
          enum:
            - IMMUTABLEX
    SudoSwapAmmData:
      title: SudoSwapAmmData
      deprecated: true
      type: object
      required:
        - dataType
      properties:
        dataType:
          type: string
          enum:
            - SUDOSWAP
    LooksrareOrderData:
      title: LooksrareOrderData
      deprecated: true
      type: object
      required:
        - dataType
      properties:
        dataType:
          type: string
          enum:
            - LOOKSRARE
    X2Y2OrderData:
      title: X2Y2OrderData
      deprecated: true
      type: object
      required:
        - dataType
      properties:
        dataType:
          type: string
          enum:
            - X2Y2
    OrderDataLegacy:
      title: OrderDataLegacy
      deprecated: true
      required:
        - fee
        - dataType
      type: object
      properties:
        dataType:
          type: string
          enum:
            - LEGACY
        fee:
          type: integer
          format: int32
    CryptoPunksData:
      title: CryptoPunksData
      deprecated: true
      required:
        - dataType
      type: object
      properties:
        dataType:
          type: string
          enum:
            - CRYPTO_PUNKS
        stub:
          type: string
    OrderForm:
      title: OrderForm
      required:
        - make
        - maker
        - take
      type: object
      properties:
        make:
          $ref: '#/components/schemas/OrderFormAsset'
        maker:
          type: string
          format: address
        salt:
          type: string
        take:
          $ref: '#/components/schemas/OrderFormAsset'
        expirationDate:
          type: string
          format: date-time
    OrderOpenSeaV1DataV1:
      title: OrderOpenSeaV1DataV1
      deprecated: true
      required:
        - dataType
        - makerProtocolFee
        - makerRelayerFee
        - takerProtocolFee
        - takerRelayerFee
      type: object
      properties:
        dataType:
          type: string
          enum:
            - ORDER_OPEN_SEA_V1_DATA_V1
        exchange:
          deprecated: true
          type: string
          format: address
        extra:
          deprecated: true
          type: number
          format: biginteger
        feeMethod:
          deprecated: true
          type: string
          enum:
            - PROTOCOL_FEE
            - SPLIT_FEE
        feeRecipient:
          deprecated: true
          type: string
          format: address
        howToCall:
          deprecated: true
          type: string
          enum:
            - CALL
            - DELEGATE_CALL
        makerProtocolFee:
          type: number
          format: biginteger
        makerRelayerFee:
          type: number
          format: biginteger
        replacementPattern:
          deprecated: true
          type: string
        saleKind:
          deprecated: true
          type: string
          enum:
            - FIXED_PRICE
            - DUTCH_AUCTION
        side:
          deprecated: true
          type: string
          enum:
            - BUY
            - SELL
        staticExtraData:
          deprecated: true
          type: string
        staticTarget:
          deprecated: true
          type: string
          format: address
        takerProtocolFee:
          type: number
          format: biginteger
        takerRelayerFee:
          type: number
          format: biginteger
    SeaportDataV1:
      title: SeaportDataV1
      type: object
      deprecated: true
      required:
        - dataType
      properties:
        dataType:
          type: string
          enum:
            - SEAPORT_V1
    OrderRaribleV2DataV1:
      title: OrderRaribleV2DataV1
      deprecated: true
      required:
        - originFees
        - dataType
      type: object
      properties:
        dataType:
          type: string
          enum:
            - RARIBLE_V2_DATA_V1
        originFees:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        payouts:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/Part'
    ItemRecommendationsPageRequest:
      title: ItemRecommendationsPageRequest
      required:
        - filter
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/ItemRecommendationFilter'
        continuation:
          type: string
        size:
          minimum: 1
          maximum: 100
          default: 20
          type: integer
          format: int32
    ItemRecommendationFilter:
      title: ItemRecommendationFilter
      type: object
      oneOf:
        - $ref: '#/components/schemas/ByCollectionItemRecommendationFilter'
      discriminator:
        propertyName: '@type'
        mapping:
          by_collection: '#/components/schemas/ByCollectionItemRecommendationFilter'
    ByCollectionItemRecommendationFilter:
      title: ByCollectionItemRecommendationFilter
      required:
        - collection
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - by_collection
        collection:
          type: string
        excludeId:
          type: string
    FlowOrderDataV1:
      title: FlowOrderDataV1
      deprecated: true
      required:
        - originFees
        - dataType
      type: object
      properties:
        dataType:
          type: string
          enum:
            - FLOW
        originFees:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        payouts:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/Part'
    SolanaAuctionHouseDataV1:
      title: SolanaOrderDataV1
      type: object
      deprecated: true
      properties:
        dataType:
          type: string
          enum:
            - SOLANA
        auctionHouse:
          type: string
          format: address
    TezosOrderDataRaribleV2DataV1:
      title: TezosOrderDataRaribleV2DataV1
      required:
        - originFees
        - dataType
      type: object
      deprecated: true
      properties:
        dataType:
          type: string
          enum:
            - TEZOS
        originFees:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        payouts:
          deprecated: true
          type: array
          items:
            $ref: '#/components/schemas/Part'
    TezosOrderDataRaribleV2DataV2:
      title: TezosOrderDataRaribleV2DataV2
      type: object
      deprecated: true
      properties:
        dataType:
          type: string
          enum:
            - TEZOS_V2
    OrderValidateResult:
      title: OrderValidateResult
      required:
        - status
        - success
      type: object
      properties:
        status:
          type: string
          enum:
            - SUCCESS
            - ZERO_OR_NEGATIVE_PRICE
            - INCORRECT_FEE
            - BID_WITH_ETH
            - SAVING_ORDER_AUCTION_EXISTS
            - SAVING_BID_AUCTION_NOT_IN_PROGRESS
            - SAVING_BID_AUCTION_CURRENCY_ERROR
            - SAVING_BID_AUCTION_MIN_PRICE_ERROR
            - SAVING_BID_AUCTION_PRICE_CHANGE_ERROR
            - CREATE_ERROR_OTHER_ORDER_IS_UNCOMPLETED
            - UPDATE_ERROR_PREVIOUS_IS_COMPLETED
            - UPDATE_ERROR_VALUE_IS_DECREASED
            - UPDATE_ERROR_SELL_PRICE_IS_INCREASED
            - UPDATE_ERROR_BID_PRICE_IS_DECREASED
            - UPDATE_ERROR_PRICE_IS_EQUAL
            - UPDATE_ERROR_CURRENCY_TYPE_IS_CHANGED
            - FLOOR_BID_ON_SHARED_COLLECTION
            - EXPIRATION_DATE_PASSED
            - EXPIRATION_DATE_TOO_FAR
            - EXPIRATION_DATE_DECREASED
            - NON_EMPTY_EXPIRATION_DATE_FOR_AUCTION
        success:
          type: boolean
    Ownership:
      title: Ownership
      required:
        - blacklisted
        - categories
        - date
        - hide
        - id
        - itemId
        - blockchain
        - lazyValue
        - owner
        - pending
        - selling
        - sold
        - status
        - stock
        - token
        - value
        - verified
      type: object
      properties:
        blacklisted:
          type: boolean
        buyToken:
          deprecated: true
          type: string
          format: address
        buyTokenId:
          deprecated: true
          type: string
        currencyId:
          type: string
        categories:
          uniqueItems: true
          type: array
          items:
            type: string
        date:
          type: string
          format: date-time
        hide:
          type: boolean
        id:
          type: string
        lazyValue:
          type: number
          format: bigdecimal
        likes:
          type: integer
          deprecated: true
          format: int64
        owner:
          type: string
          format: address
        pending:
          type: array
          items:
            $ref: '#/components/schemas/ItemHistory'
        pin:
          type: string
          format: date-time
        price:
          type: number
          format: bigdecimal
        priceEth:
          type: number
          format: bigdecimal
        selling:
          type: number
          format: bigdecimal
        sold:
          type: number
          format: bigdecimal
        platform:
          $ref: '#/components/schemas/PlatformType'
        status:
          $ref: '#/components/schemas/OwnershipStatus'
        stock:
          type: number
          format: bigdecimal
        token:
          type: string
          format: address
        tokenId:
          deprecated: true
          type: string
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        itemId:
          type: string
        value:
          type: number
          format: bigdecimal
        verified:
          type: boolean
        auction:
          $ref: '#/components/schemas/Auction'
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
    PurchaseInfo:
      title: Purchase Info
      required:
        - date
        - price
        - currencyId
      type: object
      properties:
        price:
          type: number
          format: bigdecimal
        priceUsd:
          type: number
          format: bigdecimal
        currencyId:
          type: string
        date:
          type: string
          format: date-time
    OfferInAuctionPageRequest:
      title: OfferInAuctionPageRequest
      type: object
      description: owner - address of the user who created the order (maker)
      properties:
        continuation:
          type: string
        owner:
          deprecated: true
          description: use owners instead
          type: string
          format: address
        owners:
          type: array
          items:
            uniqueItems: true
            type: string
            format: address
        size:
          minimum: 1
          maximum: 100
          default: 50
          type: integer
          format: int32
    OfferPageRequest:
      title: OfferPageRequest
      type: object
      description: owner - address of the user who created the order (maker)
      properties:
        continuation:
          type: string
        owner:
          deprecated: true
          description: use owners instead
          type: string
          format: address
        owners:
          type: array
          items:
            uniqueItems: true
            type: string
            format: address
        size:
          minimum: 1
          maximum: 100
          default: 50
          type: integer
          format: int32
        kind:
          type: string
          enum:
            - COLLECTION
            - ITEM
    PageRequest:
      title: PageRequest
      type: object
      properties:
        continuation:
          type: string
        size:
          minimum: 1
          maximum: 100
          default: 50
          type: integer
          format: int32
    Part:
      title: Part
      required:
        - account
        - value
      type: object
      properties:
        account:
          type: string
          format: address
        value:
          type: integer
          format: int32
    Profile:
      title: Profile
      required:
        - badges
        - blacklisted
        - followers
        - followings
        - id
        - type
      type: object
      properties:
        badges:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - VERIFIED
              - RE_VERIFIED
        blacklisted:
          type: boolean
        blockchain: #deprecated
          $ref: '#/components/schemas/Blockchain'
        description:
          type: string
        followers:
          type: integer
          format: int64
        followings:
          type: integer
          format: int64
        id:
          type: string
        name:
          type: string
        shortUrl:
          type: string
        type:
          type: string
          enum:
            - COLLECTION
            - USER
        website:
          type: string
        coverMedia:
          type: array
          description: >
            Should contain sizes ORIGINAL, PREVIEW, BIG, PLACEHOLDER
          items:
            $ref: '#/components/schemas/Media'
        imageMedia:
          type: array
          description: >
            Should contain sizes ORIGINAL, PREVIEW, BIG
          items:
            $ref: '#/components/schemas/Media'
        wallets:
          type: array
          items:
            type: string
            format: address
        bestBidOrder:
          $ref: '#/components/schemas/DeprecatedOrder'
    ProfileBadge:
      title: ProfileBadge
      required:
        - value
      type: object
      properties:
        status:
          type: string
          enum:
            - APPROVED
            - DECLINED
            - IN_PROCESS
            - NOT_STARTED
        value:
          type: string
          enum:
            - VERIFIED
            - RE_VERIFIED
    ProfileMeta:
      title: ProfileMeta
      required:
        - address
        - followers
        - followings
        - hides
        - itemsCreated
        - likes
        - ownerships
        - ownershipsWithStock
        - onSecondarySale
      type: object
      properties:
        address:
          type: string
          format: address
        followers:
          type: integer
          format: int64
        followings:
          type: integer
          format: int64
        hides:
          type: integer
          format: int64
        itemsCreated:
          type: integer
          format: int64
        collections:
          type: integer
          format: int64
        likes:
          type: integer
          format: int64
        ownerships:
          type: integer
          format: int64
        ownershipsWithStock:
          type: integer
          format: int64
        onSecondarySale:
          type: integer
          format: int64
        haveSecondaryOwner:
          type: integer
          format: int64
    ReportForm:
      title: ReportForm
      required:
        - message
      type: object
      properties:
        message:
          type: string
    ResendEmailConfirmationResult:
      title: ResendEmailConfirmationResult
      required:
        - status
        - success
      type: object
      properties:
        status:
          type: string
          enum:
            - NO_EMAIL_SAVED
            - RESENT
            - TOO_SHORT_TIME_PASSED
        success:
          type: boolean
    Royalty:
      title: Royalty
      required:
        - recipient
        - value
      type: object
      properties:
        recipient:
          type: string
          format: address
        value:
          type: integer
          format: int64
    SecretUserPreference:
      title: SecretUserPreference
      required:
        - id
        - emailConfirmationStatus
      type: object
      properties:
        id:
          type: string
        address:
          deprecated: true
          description: Use id
          type: string
          format: address
        email:
          type: string
        emailConfirmationStatus:
          type: string
          enum:
            - ATTEMPTS_EXCEEDED
            - CONFIRMATION
            - CONFIRMED
            - EXPIRED
            - NOT_SET
    SecretUserPreferenceResult:
      title: SecretUserPreferenceResult
      required:
        - secretUserPreference
      type: object
      properties:
        secretUserPreference:
          $ref: '#/components/schemas/SecretUserPreference'
    ShortUrl:
      title: ShortUrl
      required:
        - id
        - owner
      type: object
      properties:
        createDate:
          type: string
          format: date-time
        id:
          type: string
        owner:
          type: string
          format: address
        ref:
          type: string
        type:
          type: string
          enum:
            - COLLECTION
            - USER
        version:
          type: integer
          format: int64
    WertSigned:
      title: WertSigned
      required:
        - form
        - signature
      type: object
      properties:
        form:
          $ref: '#/components/schemas/WertForm'
        signature:
          $ref: '#/components/schemas/Binary'
    SizeType:
      title: SizeType
      type: string
      enum:
        - SOURCE
        - EXTRA_SOURCE
        - ORIGINAL
        - PREVIEW
        - BIG
        - PLACEHOLDER
        - MOBILE_LOW
        - MOBILE_MEDIUM
        - MOBILE_HIGH
        - CMP_PREVIEW
    SubscribeForm:
      title: SubscribeForm
      required:
        - email
      type: object
      properties:
        email:
          type: string
    Tag:
      title: Tag
      required:
        - name
        - source
      type: object
      properties:
        name:
          type: string
        source:
          type: string
          enum:
            - ADMIN
            - USER
    TermsForm:
      title: TermsForm
      required:
        - version
      description: 'message format must be - "I want to accept terms version $version."'
      type: object
      properties:
        version:
          type: integer
          format: int32
    Token:
      title: Token
      required:
        - blockchain
        - editors
        - features
        - id
        - name
        - standard
        - tags
        - shared
        - itemsWithRarity
      type: object
      properties:
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        cover:
          type: string
        description:
          type: string
        editors:
          uniqueItems: true
          type: array
          items:
            type: string
            format: address
        features:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TokenFeature'
        id:
          type: string
          format: address
        name:
          type: string
        keywords:
          type: string
        owner:
          type: string
          format: address
        pic:
          type: string
        shortUrl:
          type: string
        links:
          type: object
          additionalProperties:
            type: string
        standard:
          type: string
          enum:
            - DEPRECATED
            - ERC1155
            - ERC721
            - NONE
            - FLOW_NFT
            - TEZOS_NFT
            - TEZOS_MT
            - SOLANA_NFT
            - CRYPTO_PUNKS
        symbol:
          type: string
        tags:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        shared:
          type: boolean
        blacklisted:
          type: boolean
        itemsWithRarity:
          type: boolean
        badges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BadgeType'
        coverMedia:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        imageMedia:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        size:
          type: integer
          format: int64
        onSaleSize:
          type: integer
          format: int64
        hasTraits:
          type: boolean
        hasRewards:
          type: boolean
          default: false
        statistics:
          $ref: '#/components/schemas/TokenStatistics'
        communityMarketplaceUrl:
          description: link to the community marketplace. undefined if there is no community marketplace
          type: string
          format: uri
    TokenFeature:
      type: string
      enum:
        - APPROVE_FOR_ALL
        - BURN
        - MINT_AND_TRANSFER
        - MINT_WITH_ADDRESS
        - SECONDARY_SALE_FEES
        - SET_URI_PREFIX
    UnlockResult:
      title: UnlockResult
      required:
        - content
      type: object
      properties:
        content:
          type: string
    WalletCheckResult:
      title: WalletCheckResult
      required:
        - clean
      type: object
      properties:
        clean:
          type: boolean
    User:
      title: User
      required:
        - id
        - acceptedTerms
        - emailConfirmed
        - followers
        - followings
        - receiveEmailNotifications
      type: object
      properties:
        id:
          type: string
        acceptedTerms:
          type: integer
          format: int32
        address:
          type: string
          deprecated: true
          format: address
        blockchain: #deprecated: true
          $ref: '#/components/schemas/Blockchain'
        cover:
          type: string
        description:
          type: string
        emailConfirmed:
          type: boolean
        followers:
          type: integer
          format: int64
        followings:
          type: integer
          format: int64
        instagramUsername:
          type: string
        pic:
          type: string
        receiveEmailNotifications:
          type: boolean
        viewConfig:
          $ref: '#/components/schemas/UserViewConfig'
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
        shortUrl:
          type: string
        twitterUsername:
          type: string
        username:
          type: string
        website:
          type: string
        wallets:
          type: array
          items:
            type: string
            format: address
        blacklisted:
          type: boolean
        badges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BadgeType'
        coverMedia:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        imageMedia:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    UserForm:
      title: UserForm
      required:
        - username
      type: object
      properties:
        cover:
          type: string
        description:
          type: string
        pic:
          type: string
        receiveEmailNotifications:
          type: boolean
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
        shortUrl:
          type: string
        username:
          type: string
        website:
          type: string
    UserViewConfig:
      title: UserViewConfig
      type: object
      required:
        - autoPlay
      properties:
        autoPlay:
          type: boolean
    WertConverted:
      title: WertConverted
      required:
        - ticker
        - feePercent
        - currencyAmount
        - feeAmount
        - commodityAmount
        - purchaseAmount
        - minerFee
      type: object
      properties:
        ticker:
          type: number
          format: bigdecimal
        feePercent:
          type: number
          format: bigdecimal
        currencyAmount:
          type: number
          format: bigdecimal
        feeAmount:
          type: number
          format: bigdecimal
        commodityAmount:
          type: number
          format: bigdecimal
        purchaseAmount:
          type: number
          format: bigdecimal
        minerFee:
          type: number
          format: bigdecimal
    WertConvertResponse:
      title: WertConvertResponse
      required:
        - converted
        - signed
      properties:
        converted:
          $ref: '#/components/schemas/WertConverted'
        signed:
          $ref: '#/components/schemas/WertSigned'
    WertConvertRequest:
      title: WertConvertRequest
      required:
        - amount
        - buyer
      type: object
      properties:
        amount:
          type: number
          format: biginteger
          minimum: 1
        buyer:
          type: string
          format: address
    WertForm:
      title: WertForm
      required:
        - address
        - commodity
        - commodityAmount
        - pkId
        - scAddress
        - scId
        - scInputData
      type: object
      properties:
        address:
          type: string
          format: address
        commodity:
          type: string
          enum:
            - ETH
        commodityAmount:
          type: number
          format: bigdecimal
        pkId:
          type: string
        scAddress:
          type: string
          format: address
        scId:
          type: string
        scInputData:
          $ref: '#/components/schemas/Binary'
    SearchableProfile:
      title: SearchableProfile
      type: object
      required:
        - id
      properties:
        id:
          type: string
    SearchableItemProperties:
      title: SearchableItemProperties
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ItemAttribute'
    SearchableItem:
      title: SearchableItem
      type: object
      required:
        - id
        - deleted
        - verified
        - token
        - itemId
        - blockchain
        - collection
        - blacklisted
        - totalStock
      properties:
        id:
          type: string
        blacklisted:
          type: boolean
        deleted:
          type: boolean
        verified:
          type: boolean
        hide:
          type: boolean
        lazySupply:
          type: number
          format: bigdecimal
          description: count of lazy supply items
        token:
          type: string
        tokenId:
          type: string
        collection:
          $ref: '#/components/schemas/SearchableCollection'
        creators:
          type: array
          items:
            $ref: '#/components/schemas/SearchableProfile'
        properties:
          $ref: '#/components/schemas/SearchableItemProperties'
        totalStock:
          type: number
          format: bigdecimal
        categories:
          type: array
          items:
            type: string
        date:
          type: string
          format: date-time
        mintedAt:
          type: string
          format: date-time
        likes:
          type: integer
          format: int64
        currency:
          type: string
          format: address
        orderSource:
          type: string
        price:
          type: number
          format: bigdecimal
        priceEth:
          type: number
          format: bigdecimal
        auctionEndDate:
          type: string
          format: date-time
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/OwnershipStatus'
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        hasOffer:
          type: boolean
        secondarySale:
          type: boolean
        haveSecondaryOwner:
          type: boolean
        hasMetaContent:
          type: boolean
        visitCounters:
          $ref: '#/components/schemas/VisitCounters'
        rarityScore:
          type: number
          format: bigdecimal
        protocolEventLastUpdatedAt:
          type: string
          format: date-time
        hasRewards:
          type: boolean
          default: false
        version:
          type: integer
          format: int64
    SearchableOwnership:
      title: SearchableOwnership
      type: object
      required:
        - id
        - deleted
        - verified
        - token
        - collection
        - blockchain
        - owner
        - blacklisted
        - stock
        - date
        - value
        - hide
      properties:
        id:
          type: string
        blacklisted:
          type: boolean
        deleted:
          type: boolean
        verified:
          type: boolean
        token:
          type: string
        tokenId:
          deprecated: true
          type: string
        itemId:
          type: string
        collection:
          $ref: '#/components/schemas/SearchableCollection'
        owner:
          $ref: '#/components/schemas/SearchableProfile'
        stock:
          type: number
          format: bigdecimal
        value:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        hide:
          type: boolean
        categories:
          type: array
          items:
            type: string
        currency:
          type: string
          format: address
        price:
          type: number
          format: bigdecimal
        priceEth:
          type: number
          format: bigdecimal
        orderSource:
          type: string
        auctionEndDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/OwnershipStatus'
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        protocolEventLastUpdatedAt:
          type: string
          format: date-time
        protocolCreatedAt:
          type: string
          format: date-time
        version:
          type: integer
          format: int64
    SearchableTrait:
      title: SearchableTrait
      type: object
      required:
        - id
        - collectionId
        - key
        - value
        - itemsCount
        - version
      properties:
        id:
          type: string
        collectionId:
          type: string
        key:
          type: string
        value:
          type: string
        itemsCount:
          type: integer
          format: int64
        version:
          type: integer
          format: int64
    TokenStatistics:
      title: TokenStatistics
      type: object
      required:
        - itemCountTotal
        - ownerCountTotal
        - totalVolume
        - volumes
      properties:
        floorPrice:
          $ref: '#/components/schemas/StatisticsValue'
        highestSale:
          $ref: '#/components/schemas/StatisticsValue'
        itemCountTotal:
          type: number
          format: biginteger
        ownerCountTotal:
          type: number
          format: biginteger
        totalVolume:
          $ref: '#/components/schemas/StatisticsValue'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsPeriodValue'
    StatisticsValue:
      title: StatisticsValue
      type: object
      required:
        - value
        - valueUsd
      properties:
        value:
          type: number
          format: bigdecimal
        valueUsd:
          type: number
          format: bigdecimal
    StatisticsPeriodValue:
      title: StatisticsPeriodValue
      type: object
      required:
        - value
        - period
      properties:
        value:
          $ref: '#/components/schemas/StatisticsValue'
        period:
          $ref: '#/components/schemas/StatisticsPeriod'
        changePercent:
          type: number
          format: bigdecimal
    SearchableCollectionStatistics:
      title: SearchableCollectionStatistics
      type: object
      required:
        - volumes
      properties:
        floorPrices:
          type: array
          items:
            $ref: '#/components/schemas/SearchablePrice'
        totalVolume:
          $ref: '#/components/schemas/StatisticsValue'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsPeriodValue'
    SearchablePrice:
      title: SearchablePrice
      required:
        - value
        - currencyId
      type: object
      properties:
        value:
          type: number
          format: bigdecimal
        currencyId:
          type: string
    SearchableCollection:
      title: SearchableCollection
      type: object
      required:
        - id
        - blockchain
        - verified
        - name
        - blacklisted
        - indexable
      properties:
        id:
          type: string
        blacklisted:
          type: boolean
        indexable:
          type: boolean
        verified:
          type: boolean
        name:
          type: string
        keywords:
          type: string
        owner:
          $ref: '#/components/schemas/SearchableProfile'
        tags:
          type: array
          items:
            type: string
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        size:
          default: 0
          type: integer
          format: int64
        multiple:
          type: boolean
        statistics:
          $ref: '#/components/schemas/SearchableCollectionStatistics'
        hasRewards:
          type: boolean
          default: false
        showInRanking:
          type: boolean
          default: true
        hasCommunityMarketplace:
          type: boolean
          default: false
        version:
          type: integer
          format: int64
    SearchableUser:
      title: SearchableUser
      type: object
      required:
        - id
        - verified
        - blacklisted
      properties:
        id:
          type: string
        blacklisted:
          type: boolean
        verified:
          type: boolean
        username:
          type: string
        wallets:
          type: array
          items:
            type: string
        followers:
          type: integer
          format: int64
        version:
          type: integer
          format: int64
    SearchableCurrency:
      title: SearchableCurrency
      required:
        - id
        - rate
      type: object
      properties:
        id:
          type: string
        rate:
          type: number
          format: bigdecimal
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        primary:
          type: boolean
          default: false
    CurrencyForm:
      title: CurrencyForm
      type: object
      properties:
        blockchain:
          type: array
          items:
            $ref: '#/components/schemas/Blockchain'
    # Sent by websockets
    WertEvent:
      title: WertEvent
      type: object
      required:
        - clickId
        - status
      properties:
        clickId:
          type: string
        status:
          type: string
          enum:
            - COMPLETE
            - ORDER_FAILED
            - TRANSACTION_FAILED
        transactionHash:
          type: string
    ChangeEvent:
      title: ChangeEvent
      type: object
      oneOf:
        - $ref: '#/components/schemas/FakeChangeEvent'
        - $ref: '#/components/schemas/OwnershipChangeEvent'
        - $ref: '#/components/schemas/FollowingChangeEvent'
        - $ref: '#/components/schemas/ItemChangeEvent'
        - $ref: '#/components/schemas/ItemLikeChangeEvent'
        - $ref: '#/components/schemas/TokenChangeEvent'
        - $ref: '#/components/schemas/UserChangeEvent'
        - $ref: '#/components/schemas/OfferChangeEvent'
        - $ref: '#/components/schemas/AuctionChangeEvent'
        - $ref: '#/components/schemas/WertChangeEvent'
        - $ref: '#/components/schemas/ActivityChangeEvent'
      discriminator:
        propertyName: 'type'
        mapping:
          FAKE: '#/components/schemas/FakeChangeEvent'
          OWNERSHIP: '#/components/schemas/OwnershipChangeEvent'
          FOLLOWING: '#/components/schemas/FollowingChangeEvent'
          ITEM: '#/components/schemas/ItemChangeEvent'
          ITEMLIKE: '#/components/schemas/ItemLikeChangeEvent'
          TOKEN: '#/components/schemas/TokenChangeEvent'
          USER: '#/components/schemas/UserChangeEvent'
          OFFER: '#/components/schemas/OfferChangeEvent'
          AUCTION: '#/components/schemas/AuctionChangeEvent'
          WERT: '#/components/schemas/WertChangeEvent'
          ACTIVITY: '#/components/schemas/ActivityChangeEvent'
    FakeChangeEvent:
      title: FakeChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - FAKE
        value:
          type: string
    OwnershipChangeEvent:
      title: OwnershipChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - OWNERSHIP
        value:
          $ref: '#/components/schemas/Ownership'
    FollowingChangeEvent:
      title: FollowingChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - FOLLOWING
        value:
          $ref: '#/components/schemas/Following'
    ItemChangeEvent:
      title: ItemChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - ITEM
        value:
          $ref: '#/components/schemas/Item'
    ItemLikeChangeEvent:
      title: ItemLikeChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - ITEMLIKE
        value:
          $ref: '#/components/schemas/ItemLike'
    TokenChangeEvent:
      title: TokenChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - TOKEN
        value:
          $ref: '#/components/schemas/Profile'
    UserChangeEvent:
      title: UserChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - USER
        value:
          $ref: '#/components/schemas/Profile'
    OfferChangeEvent:
      title: OfferChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - OFFER
        value:
          $ref: '#/components/schemas/DeprecatedOrder'
    AuctionChangeEvent:
      title: AuctionChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - AUCTION
        value:
          $ref: '#/components/schemas/OnSale'
    WertChangeEvent:
      title: WertChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - WERT
        value:
          $ref: '#/components/schemas/WertEvent'
    ActivityChangeEvent:
      title: ActivityChangeEvent
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - ACTIVITY
        value:
          $ref: '#/components/schemas/Activity'
    AbstractSubscribeRequest:
      title: AbstractSubscribeRequest
      type: object
      oneOf:
        - $ref: '#/components/schemas/SubscribeRequest'
        - $ref: '#/components/schemas/ActivitySubscribeRequest'
      discriminator:
        propertyName: 'type'
        mapping:
          OWNERSHIP: '#/components/schemas/SubscribeRequest'
          FOLLOWING: '#/components/schemas/SubscribeRequest'
          ITEM: '#/components/schemas/SubscribeRequest'
          COLLECTION_ITEMS: '#/components/schemas/SubscribeRequest'
          ITEMLIKE: '#/components/schemas/SubscribeRequest'
          PROFILE: '#/components/schemas/SubscribeRequest'
          OFFER: '#/components/schemas/SubscribeRequest'
          AUCTION: '#/components/schemas/SubscribeRequest'
          WERT: '#/components/schemas/SubscribeRequest'
          ACTIVITY: '#/components/schemas/ActivitySubscribeRequest'
    SubscribeRequest:
      title: SubscribeRequest
      type: object
      required:
        - type
        - id
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - OWNERSHIP
            - FOLLOWING
            - ITEM
            - COLLECTION_ITEMS
            - ITEMLIKE
            - PROFILE
            - OFFER
            - AUCTION
            - WERT
    ActivitySubscribeRequest:
      title: ActivitySubscribeRequest
      type: object
      required:
        - type
        - activityTypes
      properties:
        type:
          type: string
          enum:
            - ACTIVITY
        activityFilter:
          $ref: '#/components/schemas/ActivityFilter'
        activityTypes:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ActivityType'
    VisitCounters:
      title: VisitCounters
      type: object
      required:
        - week
      properties:
        week:
          type: integer
          format: int64
    PlatformType:
      title: PlatformType
      type: string
      enum:
        - RARIBLE
        - OPEN_SEA
        - CRYPTO_PUNKS
        - IMMUTABLEX
        - OBJKT
        - HEN
        - LOOKSRARE
        - X2Y2
        - SUDOSWAP
        - VERSUM
        - TEIA
        - FXHASH
        - OTHER
    OrderStatus:
      title: OrderStatus
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - COMPLETED
        - CANCELLED
    OrderByMakerPageRequest:
      title: OrderByMakerPageRequest
      type: object
      required:
        - maker
        - side
      properties:
        maker:
          type: string
        platform:
          $ref: '#/components/schemas/PlatformType'
        status:
          $ref: '#/components/schemas/OrderStatus'
        side:
          $ref: '#/components/schemas/OrderSide'
        blockchains:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Blockchain'
        continuation:
          type: string
        size:
          minimum: 1
          maximum: 100
          default: 50
          type: integer
          format: int32
    BestOfferByMakersRequest:
      title: BestOfferByMakersRequest
      type: object
      required:
        - maker
      properties:
        maker:
          type: string
        token:
          type: string
        itemId:
          type: string
    StatisticsCurrency:
      type: string
      enum:
        - USD
        - ETH
        - XTZ
        - FLOW
        - MATIC
        - SOL
    CollectionRankingRequest:
      type: object
      required: [ period, size ]
      properties:
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        hasRewards:
          type: boolean
        hasCommunityMarketplace:
          type: boolean
        period:
          $ref: '#/components/schemas/StatisticsPeriod'
        minFloorPrice:
          type: number
          format: bigdecimal
        maxFloorPrice:
          type: number
          format: bigdecimal
        size:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
    RankingRequest:
      type: object
      required: [ period, size ]
      properties:
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        period:
          $ref: '#/components/schemas/StatisticsPeriod'
        size:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
    StatisticsAmount:
      type: object
      required: [ value, currency ]
      properties:
        value:
          type: number
          format: bigdecimal
        currency:
          $ref: '#/components/schemas/StatisticsCurrency'
    StatisticsAmountWithChange:
      type: object
      required: [ value, currency ]
      properties:
        value:
          type: number
          format: bigdecimal
        currency:
          $ref: '#/components/schemas/StatisticsCurrency'
        changePercent:
          type: number
          format: bigdecimal
    CollectionStatistics:
      type: object
      required: [ amount, usdAmount ]
      properties:
        floorPrice:
          $ref: '#/components/schemas/StatisticsAmountWithChange'
        amount:
          $ref: '#/components/schemas/StatisticsAmount'
        usdAmount:
          $ref: '#/components/schemas/StatisticsAmountWithChange'
        owners:
          type: integer
          format: int32
        items:
          type: integer
          format: int32
    UserStatistics:
      type: object
      required: [ amount, usdAmount ]
      properties:
        amount:
          $ref: '#/components/schemas/StatisticsAmount'
        usdAmount:
          $ref: '#/components/schemas/StatisticsAmount'
    CollectionRankingItem:
      type: object
      required:
        - id
        - name
        - statistics
      properties:
        id:
          type: string
          format: address
        name:
          type: string
        collection:
          $ref: '#/components/schemas/Token'
        statistics:
          $ref: '#/components/schemas/CollectionStatistics'
    SellerRankingItem:
      type: object
      required: [ wallet, statistics ]
      properties:
        wallet:
          type: string
          format: address
        statistics:
          $ref: '#/components/schemas/UserStatistics'
        user:
          $ref: '#/components/schemas/User'
        items:
          type: array
          description: Cheapest items on sale belonging to the user
          items:
            $ref: '#/components/schemas/Item'
    UserRankingItem:
      type: object
      required: [ wallet, statistics ]
      properties:
        wallet:
          type: string
          format: address
        statistics:
          $ref: '#/components/schemas/UserStatistics'
    SearchableActivity:
      title: SearchableActivity
      required:
        - date
        - id
        - owner
      type: object
      properties:
        date:
          type: string
          format: date-time
        id:
          type: string
        owner:
          type: string
          format: address
        reverted:
          type: boolean
          default: false
      oneOf:
        - $ref: '#/components/schemas/SearchableActivityLike'
        - $ref: '#/components/schemas/SearchableActivityFollow'
      discriminator:
        propertyName: '@type'
        mapping:
          like: '#/components/schemas/SearchableActivityLike'
          follow: '#/components/schemas/SearchableActivityFollow'
    SearchableActivityLike:
      title: SearchableActivityLike
      required:
        - itemId
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - like
        token:
          type: string
        itemId:
          type: string
        blockchain:
          $ref: '#/components/schemas/Blockchain'
    SearchableActivityFollow:
      title: SearchableActivityFollow
      required:
        - userId
        - '@type'
      type: object
      properties:
        '@type':
          type: string
          enum:
            - follow
        userId:
          type: string
    Price:
      title: Price
      required:
        - value
        - currency
      type: object
      properties:
        value:
          type: number
          format: bigdecimal
        currency:
          $ref: '#/components/schemas/Currency'
    OrderSide:
      type: string
      enum:
        - BUY
        - SELL
    OrderAsset:
      title: SearchableOrderAsset
      required:
        - type
        - value
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/OrderAssetType'
    OrderAssetType:
      type: string
      enum:
        - ITEM
        - COLLECTION
    NotificationSettings:
      title: NotificationSettings
      required:
        - flags
      type: object
      properties:
        flags:
          description: 'A map of notification settings, where keys are UserNotificationType values that correspond to flags to enable or disable them. Any keys that are not in UserNotificationType values would not be processed'
          type: object
          additionalProperties:
            type: boolean
    UserNotificationType:
      type: string
      enum:
        - BUY
        - ACCEPT_BID
        - BID
        - BID_INACTIVATION
        - OUT_BID
        - ROYALTY
        - ANNOUNCE
        - PURCHASE
        - LISTED
    CollectionStatisticsGraph:
      required:
        - historicalDates
        - historicalValues
      type: object
      properties:
        historicalDates:
          type: array
          description: Dates of historical statistics
          items:
            type: string
            description: Dates of historical statistics
        historicalValues:
          type: array
          description: Values of historical statistics
          items:
            type: number
            format: bigdecimal
            description: Values of historical statistics
        currentValue:
          type: number
          format: bigdecimal
          description: Current value
    GeneralCollectionStatisticsVolume:
      required:
        - currency
        - highestSale
        - volume
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/StatisticsCurrency'
        highestSale:
          type: number
          format: bigdecimal
          description: Price of the highest sale of collection item
        floorPrice:
          type: number
          format: bigdecimal
          description: Floor price of collection item
        marketCap:
          type: number
          format: bigdecimal
          description: Market cap of collection
        volume:
          type: number
          format: bigdecimal
          description: Volume of collection sales
    GeneralCollectionStatistics:
      required:
        - id
        - nativeVolume
        - usdVolume
        - items
        - owners
      type: object
      properties:
        id:
          type: string
          format: address
        nativeVolume:
          $ref: '#/components/schemas/GeneralCollectionStatisticsVolume'
        usdVolume:
          $ref: '#/components/schemas/GeneralCollectionStatisticsVolume'
        items:
          type: integer
          format: int32
          description: Count of collection items
        owners:
          type: integer
          format: int32
          description: Count of collection items owners
    CollectionPricesStatistics:
      required:
        - avgPrices
        - dates
        - medianPrices
        - minPrices
        - sumPrices
      type: object
      properties:
        dates:
          type: array
          description: Dates of historical statistics
          items:
            type: string
            description: Dates of historical statistics
        avgPrices:
          type: array
          description: Collection items average prices of historical statistics
          items:
            type: number
            format: bigdecimal
            description: Collection items average prices of historical statistics
        medianPrices:
          type: array
          description: Collection items median prices of historical statistics
          items:
            type: number
            format: bigdecimal
            description: Collection items median prices of historical statistics
        minPrices:
          type: array
          description: Collection items min prices of historical statistics
          items:
            type: number
            format: bigdecimal
            description: Collection items min prices of historical statistics
        sumPrices:
          type: array
          description: Collection items sum prices of historical statistics
          items:
            type: number
            format: bigdecimal
            description: Collection items sum prices of historical statistics
    Popular:
      required:
        - id
        - title
        - type
        - count
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        type:
          type: string
          enum:
            - ITEM
            - COLLECTION
            - USER
            - CATEGORY
        count:
          type: integer
          format: int64
    RaritySource:
      type: string
      enum: [ RARITY_SNIPER ]
    ItemRarity:
      type: object
      required: [ source, rank, maxRank ]
      properties:
        source:
          $ref: '#/components/schemas/RaritySource'
        rank:
          type: integer
          format: int32
        maxRank:
          type: integer
          format: int32
        counterpartyUrl:
          type: string
    Trait:
      title: Trait
      type: object
      description: Combination of Item attribute key with list of values
      required:
        - key
        - values
      properties:
        key:
          $ref: '#/components/schemas/TraitEntry'
        values:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TraitEntry'
    TraitEntry:
      title: TraitEntry
      type: object
      description: Combination of Item attribute key/value with it's count
      required:
        - value
        - count
      properties:
        value:
          type: string
        count:
          type: integer
          format: int64
    TraitsRarityRequest:
      title: TraitsRarityRequest
      type: object
      description: Request rarity of the properties in the collection
      required:
        - collectionId
        - properties
      properties:
        collectionId:
          type: string
        properties:
          type: array
          minItems: 1
          maxItems: 200
          items:
            $ref: '#/components/schemas/TraitProperty'
    TraitProperty:
      title: TraitProperty
      type: object
      description: Item trait property
      required:
        - key
        - value
      properties:
        key:
          type: string
        value:
          type: string
    ExtendedTraitProperty:
      title: ExtendedTraitProperty
      type: object
      description: Trait property parameters with additional features
      required:
        - key
        - value
        - rarity
      properties:
        key:
          type: string
        value:
          type: string
        rarity:
          type: number
          format: bigdecimal
          description: Rarity percent
    CollectionItems:
      title: CollectionItems
      type: object
      required: [ collectionId, items ]
      properties:
        collectionId:
          type: string
          format: address
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    ItemContentAvailability:
      title: ItemContentAvailability
      required:
        - itemId
        - available
      type: object
      properties:
        itemId:
          type: string
        available:
          type: boolean
    BestBidOwnership:
      title: BestBidOwnership
      type: object
      required:
        - ownership
        - item
        - bid
      properties:
        ownership:
          $ref: '#/components/schemas/Ownership'
        item:
          $ref: '#/components/schemas/Item'
        bid:
          $ref: '#/components/schemas/DeprecatedOrder'
    ItemPageRequest:
      title: ItemPageRequest
      required:
        - filter
        - size
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/ItemFilter'
        continuation:
          type: string
        size:
          minimum: 1
          maximum: 1000
          default: 50
          type: integer
          format: int32
        searchRequestId:
          type: string
    ItemFilter:
      title: ItemFilter
      type: object
      properties:
        searchingUserId:
          type: string
        text:
          type: string
        textFields:
          type: array
          uniqueItems: true
          default: [TITLE]
          items:
            $ref: '#/components/schemas/TextField'
        collections:
          type: array
          items:
            type: string
        verifiedOnly:
          type: boolean
          default: true
        verifiedCreatorOnly:
          type: boolean
          default: false
        followingsByOwner:
          deprecated: true
          type: string
          format: address
        followingsByCreator:
          type: string
          format: address
        category:
          type: string
        categories:
          type: array
          items:
            type: string
        inStockOnly:
          type: boolean
          default: false
        hide:
          type: boolean
        secondarySale:
          type: boolean
        haveSecondaryOwner:
          type: boolean
        hasMetaContentOnly:
          type: boolean
          default: false
        hideItemsSupply:
          $ref: '#/components/schemas/HideItemsSupply'
        nsfw:
          type: boolean
          default: false
        ownerAddress:
          deprecated: true
          type: string
          format: address
        creatorAddress:
          deprecated: true
          description: use creatorAddresses
          type: string
          format: address
        creatorAddresses:
          type: array
          items:
            type: string
            format: address
        minPrice:
          type: number
          format: bigdecimal
        maxPrice:
          type: number
          format: bigdecimal
        mintedAtFrom:
          type: string
          format: date-time
        mintedAtTo:
          type: string
          format: date-time
        currency:
          type: string
          format: address
        currencyRates:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyRate'
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/OwnershipStatus'
        traits:
          type: array
          items:
            $ref: '#/components/schemas/TraitFilter'
        blockchains:
          type: array
          items:
            $ref: '#/components/schemas/Blockchain'
        multiple:
          type: boolean
        hasRewards:
          type: boolean
        traitSort:
          $ref: '#/components/schemas/TraitSort'
        sort:
          $ref: '#/components/schemas/ItemSort'
        orderSources:
          type: array
          description: Where order was created. Can be for example RARIBLE, OPEN_SEA, an id of some whitelabel
          uniqueItems: true
          items:
            type: string
    CurrencyRate:
      title: CurrencyRate
      type: object
      required:
        - id
        - rate
      properties:
        id:
          type: string
        rate:
          type: number
          format: bigdecimal
    TextField:
      type: string
      enum:
        - TITLE
        - DESCRIPTION
    CarbonNegativeStatus:
      type: string
      enum:
        - CARBON_NEGATIVE
        - NON_CARBON_NEGATIVE
    HideItemsSupply:
      type: string
      enum:
        - HIDE_LAZY_SUPPLY
        - HIDE_NOT_LAZY_SUPPLY
    OwnershipStatus:
      title: OwnershipStatus
      type: string
      enum:
        - AUCTION
        - FIXED_PRICE
        - NOT_FOR_SALE
        - OPEN_FOR_OFFERS
    TraitFilter:
      title: TraitFilter
      type: object
      description: Combination of Item attribute key with list of values
      required:
        - key
      properties:
        key:
          type: string
        values:
          type: array
          items:
            minItems: 1
            type: string
        range:
          $ref: '#/components/schemas/Range'
    Range:
      title: Range
      type: object
      properties:
        from:
          type: number
          format: float
        to:
          type: number
          format: float
    Blockchain:
      title: Blockchain
      type: string
      enum:
        - ETHEREUM
        - FLOW
        - POLYGON
        - TEZOS
        - SOLANA
        - IMMUTABLEX
    TraitSort:
      title: TraitSort
      type: object
      required:
        - key
      properties:
        key:
          type: string
          description: Trait name
        order:
          $ref: '#/components/schemas/SortOrder'
        type:
          $ref: '#/components/schemas/SortType'
    ItemSort:
      title: ItemSort
      type: string
      enum:
        - DEFAULT
        - LATEST
        - LOW_PRICE_FIRST
        - HIGH_PRICE_FIRST
        - AUCTION_ENDING_SOON
        - MOST_VIEWED_FIRST
        - TRAIT
        - MOST_LIKED_FIRST
        - RAREST_FIRST
        - RAREST_LAST
        - TRENDING
    SortOrder:
      title: SortOrder
      type: string
      enum:
        - ASC
        - DESC
    SortType:
      title: SortType
      type: string
      default: TEXT
      enum:
        - TEXT
        - NUMERIC
    StatisticsPeriod:
      type: string
      enum:
        - M5
        - M30
        - H1
        - H6
        - DAY
        - WEEK
        - MONTH
        - TOTAL
    CollectionSort:
      title: CollectionSort
      type: string
      enum:
        - DEFAULT
        - VOLUME_DESC
        - VOLUME_ASC
    CollectionFilter:
      title: CollectionFilter
      type: object
      properties:
        searchingUserId:
          type: string
        text:
          type: string
        verifiedOnly:
          type: boolean
          default: true
        owner:
          deprecated: true
          description: use ownerAddresses
          type: string
          format: address
        ownerAddresses:
          type: array
          items:
            type: string
            format: address
        tags:
          type: array
          items:
            type: string
        blockchains:
          type: array
          items:
            $ref: '#/components/schemas/Blockchain'
        multiple:
          type: boolean
        minSize:
          type: integer
          format: int32
        maxSize:
          type: integer
          format: int32
        minVolume:
          type: number
          format: bigdecimal
        maxVolume:
          type: number
          format: bigdecimal
        minFloorPrice:
          type: number
          format: bigdecimal
        maxFloorPrice:
          type: number
          format: bigdecimal
        floorPriceCurrency:
          type: string
          description: currency for floor price filter. By default native currency for selected blockchain
        currency:
          type: string
          default: NATIVE
          description: Volume currency for sorting.
          enum:
            - USD
            - NATIVE
        hasRewards:
          type: boolean
        hasCommunityMarketplace:
          type: boolean
        showInRanking:
          type: boolean
        period:
          $ref: '#/components/schemas/StatisticsPeriod'
        sort:
          $ref: '#/components/schemas/CollectionSort'
    CollectionPageRequest:
      title: CollectionPageRequest
      required:
        - filter
        - size
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/CollectionFilter'
        continuation:
          type: string
        searchRequestId:
          type: string
        size:
          minimum: 1
          maximum: 1000
          default: 50
          type: integer
          format: int32
